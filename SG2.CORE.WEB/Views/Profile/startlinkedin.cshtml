@using SG2.CORE.COMMON;
@using SG2.CORE.MODAL;
@using SG2.CORE.MODAL.DTO.PlanInformation;
@using SG2.CORE.MODAL.DTO.Customers;
@using SG2.CORE.MODAL.ViewModals.Customers;
@model SG2.CORE.MODAL.DTO.Customers.SocialProfileDTO
@{
    Layout = null;
    var customer = (Customer)ViewBag.Customer;
}

<!DOCTYPE html>
<!--
Template Name:  SmartAdmin Responsive WebApp - Template build with Twitter Bootstrap 4
Version: 4.5.1
Author: Sunnyat A.
Website: http://gootbootstrap.com
Purchase: https://wrapbootstrap.com/theme/smartadmin-responsive-webapp-WB0573SK0?ref=myorange
License: You must have a valid license purchased only from wrapbootstrap.com (link above) in order to legally use this theme for your project.
-->
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>
        Start growing now - Connect Wizz
    </title>
    <meta name="description" content="Login">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no, user-scalable=no, minimal-ui">
    <!-- Call App Mode on ios devices -->
    <meta name="apple-mobile-web-app-capable" content="yes" />
    <!-- Remove Tap Highlight on Windows Phone IE -->
    <meta name="msapplication-tap-highlight" content="no">
    <!-- base css -->
    <link id="vendorsbundle" rel="stylesheet" media="screen, print" href="~/Content/Theme-SPPro/css/vendors.bundle.css">
    <link id="appbundle" rel="stylesheet" media="screen, print" href="~/Content/Theme-SPPro/css/app.bundle.css">

    <link id="myskin" rel="stylesheet" media="screen, print" href="~/Content/Theme-SPPro/css/skins/skin-master.css">
    <!-- Place favicon.ico in the root directory -->
    <link rel="apple-touch-icon" sizes="57x57" href="~/Content/Theme-CA/img/core-img/apple-icon-57x57.png">
    <link rel="apple-touch-icon" sizes="60x60" href="~/Content/Theme-CA/img/core-img/apple-icon-60x60.png">
    <link rel="apple-touch-icon" sizes="72x72" href="~/Content/Theme-CA/img/core-img/apple-icon-72x72.png">
    <link rel="apple-touch-icon" sizes="76x76" href="~/Content/Theme-CA/img/core-img/apple-icon-76x76.png">
    <link rel="apple-touch-icon" sizes="114x114" href="~/Content/Theme-CA/img/core-img/apple-icon-114x114.png">
    <link rel="apple-touch-icon" sizes="120x120" href="~/Content/Theme-CA/img/core-img/apple-icon-120x120.png">
    <link rel="apple-touch-icon" sizes="144x144" href="~/Content/Theme-CA/img/core-img/apple-icon-144x144.png">
    <link rel="apple-touch-icon" sizes="152x152" href="~/Content/Theme-CA/img/core-img/apple-icon-152x152.png">
    <link rel="apple-touch-icon" sizes="180x180" href="~/Content/Theme-CA/img/core-img/apple-icon-180x180.png">
    <link rel="icon" type="image/png" sizes="192x192" href="~/Content/Theme-CA/img/core-img/android-icon-192x192.png">
    <link rel="icon" type="image/png" sizes="32x32" href="~/Content/Theme-CA/img/core-img/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="96x96" href="~/Content/Theme-CA/img/core-img/favicon-96x96.png">
    <link rel="icon" type="image/png" sizes="16x16" href="~/Content/Theme-CA/img/core-img/favicon-16x16.png">
    <link rel="manifest" href="~/Content/Theme-CA/img/core-img/manifest.json">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="msapplication-TileImage" content="~/Content/Theme-CA/img/core-img/ms-icon-144x144.png">
    <meta name="theme-color" content="#ffffff">


    @*<link rel="stylesheet" media="screen, print" href="~/Content/Theme-SPPro/css/fa-brands.css">*@
    <link href="https://cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.1/bootstrap3-editable/css/bootstrap-editable.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.css" rel="stylesheet">
    <link href="~/Content/app-assets/vendors/css/forms/tags/tagging.css" rel="stylesheet" />
    <link href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"
          integrity="sha384-wvfXpqpZZVQGK6TAh5PVlGOfQNHSoD2xbE+QkPxCAFlNEevoEH3Sl0sibVcOQVnN" crossorigin="anonymous">
    <link href="~/Content/app-assets/css/stripe.css" rel="stylesheet" />
    <style>

        body {
            font-size: 1.0em;
        }

        .form-label {
            font-weight: 500;
            text-align: center;
            color: #fc077a;
            font-size: 1.2rem;
        }

        .glyphicon-ok::before {
            content: "\f00c";
        }

        .glyphicon-remove::before {
            content: "\f00d";
        }

        .glyphicon {
            font-family: 'FontAwesome';
            font-style: normal;
        }

        .editable-click, a.editable-click, a.editable-click:hover {
            color: #495057;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #CCCCCC;
            border-radius: 4px;
            width: 60%;
            display: inline-flex;
            height: calc(1.47em + 1rem + 2px);
            padding: 0.5rem 0.875rem;
        }

        .editable-buttons button {
            padding: 5px;
            height: calc(1.47em + 1rem + 8px);
        }

        .form-control {
            font-size: 16px;
        }

        .help-block {
            text-align: center;
            margin-bottom: 5px;
        }

        .numberCircle {
            border-radius: 50%;
            width: 100px;
            height: 100px;
            padding: 17px;
            background: #fc077a;
            border: 2px solid #fc077a;
            color: #FFFFFF;
            text-align: center;
            font: 55px Arial, sans-serif;
        }



        /*/////////////////////////////////////////////////////////////////////////////////////////////////////////////////*/


        .example.example1 {
            background-color: transparent;
        }

            .example.example1 * {
                font-family: Roboto, Open Sans, Segoe UI, sans-serif;
                font-size: 16px;
                font-weight: 500;
            }

            .example.example1 h1 {
                font-size: 30px;
                font-weight: bold;
            }

        example.example1 h2 {
            font-size: 20px;
        }

        .example.example1 fieldset {
            margin: 0 15px 0px;
            padding: 0;
            border-style: none;
            /*background-color: #7795f8;*/
            /*box-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08), inset 0 1px 0 #829fff;
                border-radius: 4px;*/
        }

        .example.example1 .row {
            display: -ms-flexbox;
            display: flex;
            -ms-flex-align: center;
            align-items: center;
            margin-left: 15px;
        }

            .example.example1 .row + .row {
                /*border-top: 1px solid #819efc;*/
            }

        .example.example1 label {
            min-width: 70px;
            padding: 11px 0;
            color: black;
            text-overflow: ellipsis;
            white-space: nowrap;
        }

        .example.example1 input, .example.example1 button {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            outline: none;
            width: 100%;
            height: 44px;
            padding: 8px 12px;
            color: #303030;
            font-size: 16px;
            line-height: 1.5;
            border: 0;
            box-shadow: 0 0 0 1px #e0e0e0, 0 2px 4px 0 rgba(0,0,0,.07), 0 1px 1.5px 0 rgba(0,0,0,.05);
            transition: box-shadow .08s ease-in,color .08s ease-in;
            background: #fff;
            -webkit-appearance: none;
        }

            .example.example1 input:-webkit-autofill {
                -webkit-text-fill-color: darkgray;
                transition: background-color 100000000s;
                -webkit-animation: 1ms void-animation-out;
            }

        .example.example1 .StripeElement--webkit-autofill {
            background: transparent !important;
        }

        .example.example1 .StripeElement {
            width: 100%;
            padding: 11px 15px 11px 0;
            border-radius: 6px;
            box-shadow: 0 0 0 1px #e0e0e0, 0 2px 4px 0 rgba(0,0,0,.07), 0 1px 1.5px 0 rgba(0,0,0,.05);
        }

        .example.example1 input {
            border-radius: 6px;
            width: 100%;
            padding: 11px 15px 11px 10px;
            color: black;
            background-color: transparent;
            -webkit-animation: 1ms void-animation-out;
        }

            .example.example1 input::-webkit-input-placeholder {
                color: darkgray;
            }

            .example.example1 input::-moz-placeholder {
                color: darkgray;
            }

            .example.example1 input:-ms-input-placeholder {
                color: darkgray;
            }

        .example.example1 button {
            display: block;
            width: calc(100% - 30px);
            height: 40px;
            margin: 40px 15px 0;
            border-color: #008385 !important;
            background-color: #00b5b8 !important;
            color: #FFFFFF;
            box-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08), inset 0 1px 0 #ffb9f6;
            border-radius: 4px;
            color: #fff;
            font-weight: 600;
            cursor: pointer;
        }

            .example.example1 button:active {
                background-color: #d782d9;
                box-shadow: 0 6px 9px rgba(50, 50, 93, 0.06), 0 2px 5px rgba(0, 0, 0, 0.08), inset 0 1px 0 #e298d8;
            }

        .example.example1 .error svg .base {
            fill: #fff;
        }

        .example.example1 .error svg .glyph {
            fill: #6772e5;
        }

        .example.example1 .error .message {
            color: red;
        }

        .example.example1 .success .icon .border {
            stroke: #87bbfd;
        }

        .example.example1 .success .icon .checkmark {
            stroke: #fff;
        }

        .example.example1 .success .title {
            color: #886AB5;
        }

        .example.example1 .success .message {
            color: #886AB5;
        }

        .example.example1 .success .reset path {
            fill: #fff;
        }

        .border-bottom-social-profile {
            border-bottom: 1px solid #404E67;
        }

        .l-h12-social-profile {
            line-height: 1.2;
        }

        .FormFieldInput-Icons {
            display: -webkit-box;
            display: -webkit-flex;
            display: -ms-flexbox;
            display: flex;
            margin-bottom: 3px;
        }

        .FormFieldInput-IconsIcon {
            padding-right: 4px;
        }

        .badge-primary {
            background-color: #00b5b8;
        }

        .card {
            margin-bottom: 1.875rem;
        }
    </style>
    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-VX6X7K9BJM"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'G-VX6X7K9BJM');
    </script>
    <!-- Facebook Pixel Code -->
    <script>
        !function (f, b, e, v, n, t, s) {
            if (f.fbq) return; n = f.fbq = function () {
                n.callMethod ?
                    n.callMethod.apply(n, arguments) : n.queue.push(arguments)
            };
            if (!f._fbq) f._fbq = n; n.push = n; n.loaded = !0; n.version = '2.0';
            n.queue = []; t = b.createElement(e); t.async = !0;
            t.src = v; s = b.getElementsByTagName(e)[0];
            s.parentNode.insertBefore(t, s)
        }(window, document, 'script',
            'https://connect.facebook.net/en_US/fbevents.js');
        fbq('init', '783583319163061');
        fbq('track', 'PageView');
    </script>
    <noscript>
        <img height="1" width="1" style="display:none"
             src="https://www.facebook.com/tr?id=783583319163061&ev=PageView&noscript=1" />
    </noscript>
    <!-- End Facebook Pixel Code -->
</head>
<!-- BEGIN Body -->
<!-- Possible Classes

    * 'header-function-fixed'         - header is in a fixed at all times
    * 'nav-function-fixed'            - left panel is fixed
    * 'nav-function-minify'			  - skew nav to maximize space
    * 'nav-function-hidden'           - roll mouse on edge to reveal
    * 'nav-function-top'              - relocate left pane to top
    * 'mod-main-boxed'                - encapsulates to a container
    * 'nav-mobile-push'               - content pushed on menu reveal
    * 'nav-mobile-no-overlay'         - removes mesh on menu reveal
    * 'nav-mobile-slide-out'          - content overlaps menu
    * 'mod-bigger-font'               - content fonts are bigger for readability
    * 'mod-high-contrast'             - 4.5:1 text contrast ratio
    * 'mod-color-blind'               - color vision deficiency
    * 'mod-pace-custom'               - preloader will be inside content
    * 'mod-clean-page-bg'             - adds more whitespace
    * 'mod-hide-nav-icons'            - invisible navigation icons
    * 'mod-disable-animation'         - disables css based animations
    * 'mod-hide-info-card'            - hides info card from left panel
    * 'mod-lean-subheader'            - distinguished page header
    * 'mod-nav-link'                  - clear breakdown of nav links

    >>> more settings are described inside documentation page >>>
-->
<body>
    <!-- DOC: script to save and load page settings -->


    <div class="modal fade text-left" id="planSubscriptionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header bg-white black">
                    <h4 class="modal-title hidden" id="myModalLabel1"></h4>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="cell example example1">
                        <form method="post" id="payment-form">
                            <fieldset>
                                <div class="row" style="display:block">
                                    @*<h2 class="text-center">You are subscribing to a monthly plan :</h2>*@
                                    <div class="text-center">
                                        <h1 class="text-center mt-1 hidden freetrial" style="color:red">Grow Like A PRO</h1>
                                    </div>

                                    <h1 class="text-center selectedPlanName mt-1 d-none" style="color:#886ab5"></h1>
                                    <h2 class="text-center selectedPlanPrice mt-1" style="color:#886ab5"></h2>
                                    <p class="text-center mt-1" style="color:dimgray">(Cancel anytime)</p>
                                    <input type="hidden" id="selectedPlanId" />
                                    <input type="hidden" id="selectedPlanType" />
                                    <input type="hidden" id="existingStripeCustomerId" value="@Model.SocialProfile.StripeCustomerId" />
                                    <input type="hidden" id="existingStripeSubscriptionId" value="@Model.SocialProfile.StripeSubscriptionId" />
                                    <input type="hidden" id="existingPlanId" value="@Model.SocialProfile.PaymentPlanId" />
                                    <input type="hidden" id="existingStripeCustomerSubscriptionId" value="@Model.socialcustomer.StripeSubscriptionId" />

                                </div>
                            </fieldset>
                            <fieldset>
                                <div class="row">
                                    <label for="example1-name" data-tid="elements_examples.form.name_label">Name on card</label>
                                    <input id="example1-name" data-tid="elements_examples.form.name_placeholder" type="text" placeholder="Jane Doe" required="" autocomplete="name" value="@customer.FirstName">
                                </div>
                                <div class="row">
                                    <label for="example1-email" data-tid="elements_examples.form.email_label">Email</label>
                                    <input id="example1-email" data-tid="elements_examples.form.email_placeholder" type="email" placeholder="janedoe@gmail.com" required="" autocomplete="email" value="@customer.EmailAddress">
                                </div>
                                <div class="row">
                                    <label for="example1-phone" data-tid="elements_examples.form.phone_label">Phone</label>
                                    <input id="example1-phone" data-tid="elements_examples.form.phone_placeholder" type="tel" placeholder="(941) 555-0123" required="" autocomplete="tel">
                                </div>
                            </fieldset>

                            <fieldset>
                                <div class="row">
                                    <label for="example1-phone" data-tid="elements_examples.form.phone_label" class="mr-3">Card Information</label>
                                    <div class="FormFieldInput-Icons" style="opacity: 1;"><div style="transform: none;"><span class="FormFieldInput-IconsIcon is-visible"><img src="https://js.stripe.com/v3/fingerprinted/img/visa-365725566f9578a9589553aa9296d178.svg" alt="visa" class="BrandIcon"></span></div><div style="transform: none;"><span class="FormFieldInput-IconsIcon is-visible"><img src="https://js.stripe.com/v3/fingerprinted/img/mastercard-4d8844094130711885b5e41b28c9848f.svg" alt="mastercard" class="BrandIcon"></span></div><div style="transform: none;"><span class="FormFieldInput-IconsIcon is-visible"><img src="https://js.stripe.com/v3/fingerprinted/img/amex-a49b82f46c5cd6a96a6e418a6ca1717c.svg" alt="amex" class="BrandIcon"></span></div><div class="CardFormFieldGroupIconOverflow"><span class="CardFormFieldGroupIconOverflow-Item CardFormFieldGroupIconOverflow-Item--invisible" role="presentation"><span class="FormFieldInput-IconsIcon" role="presentation"><img src="https://js.stripe.com/v3/fingerprinted/img/unionpay-8a10aefc7295216c338ba4e1224627a1.svg" alt="unionpay" class="BrandIcon"></span></span><span class="CardFormFieldGroupIconOverflow-Item CardFormFieldGroupIconOverflow-Item--invisible" role="presentation"><span class="FormFieldInput-IconsIcon" role="presentation"><img src="https://js.stripe.com/v3/fingerprinted/img/jcb-271fd06e6e7a2c52692ffa91a95fb64f.svg" alt="jcb" class="BrandIcon"></span></span><span class="CardFormFieldGroupIconOverflow-Item CardFormFieldGroupIconOverflow-Item--visible" role="presentation"><span class="FormFieldInput-IconsIcon" role="presentation"><img src="https://js.stripe.com/v3/fingerprinted/img/discover-ac52cd46f89fa40a29a0bfb954e33173.svg" alt="discover" class="BrandIcon"></span></span><span class="CardFormFieldGroupIconOverflow-Item CardFormFieldGroupIconOverflow-Item--invisible" role="presentation"><span class="FormFieldInput-IconsIcon" role="presentation"><img src="https://js.stripe.com/v3/fingerprinted/img/diners-fbcbd3360f8e3f629cdaa80e93abdb8b.svg" alt="diners" class="BrandIcon"></span></span></div></div>
                                    @*<div id="example1-card" class="StripeElement StripeElement--empty"><div class="__PrivateStripeElement" style="margin: 0px !important; padding: 0px !important; border: none !important; display: block !important; background: transparent !important; position: relative !important; opacity: 1 !important;"><iframe frameborder="0" allowtransparency="true" scrolling="no" name="__privateStripeFrame5" allowpaymentrequest="true" src="https://js.stripe.com/v3/elements-inner-card-cd25803263cd2601cb18e3cd5aa05896.html#style[base][iconColor]=%23c4f0ff&amp;style[base][color]=%23fff&amp;style[base][fontWeight]=500&amp;style[base][fontFamily]=Roboto%2C+Open+Sans%2C+Segoe+UI%2C+sans-serif&amp;style[base][fontSize]=16px&amp;style[base][fontSmoothing]=antialiased&amp;style[base][:-webkit-autofill][color]=%23fce883&amp;style[base][::placeholder][color]=%2387BBFD&amp;style[invalid][iconColor]=%23FFC7EE&amp;style[invalid][color]=%23FFC7EE&amp;iconStyle=solid&amp;locale=en&amp;componentName=card&amp;wait=true&amp;rtl=false&amp;keyMode=test&amp;apiKey=pk_test_6pRNASCoBOKtIshFeQd4XMUh&amp;origin=https%3A%2F%2Fstripe.dev&amp;referrer=https%3A%2F%2Fstripe.dev%2Felements-examples%2F&amp;controllerId=__privateStripeController1" title="Secure payment input frame" style="border: none !important; margin: 0px !important; padding: 0px !important; width: 1px !important; min-width: 100% !important; overflow: hidden !important; display: block !important; user-select: none !important; height: 19.2px;"></iframe><input class="__PrivateStripeElement-input" aria-hidden="true" aria-label=" " autocomplete="false" maxlength="1" style="border: none !important; display: block !important; position: absolute !important; height: 1px !important; top: 0px !important; left: 0px !important; padding: 0px !important; margin: 0px !important; width: 100% !important; opacity: 0 !important; background: transparent !important; pointer-events: none !important; font-size: 16px !important;"></div></div>*@
                                    <div id="card-element">
                                        <!-- A Stripe Element will be inserted here. -->
                                    </div>
                                    <div class="error" role="alert">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="17" height="17" viewBox="0 0 17 17">
                                            <path class="base" fill="#000" d="M8.5,17 C3.80557963,17 0,13.1944204 0,8.5 C0,3.80557963 3.80557963,0 8.5,0 C13.1944204,0 17,3.80557963 17,8.5 C17,13.1944204 13.1944204,17 8.5,17 Z"></path>
                                            <path class="glyph" fill="#FFF" d="M8.5,7.29791847 L6.12604076,4.92395924 C5.79409512,4.59201359 5.25590488,4.59201359 4.92395924,4.92395924 C4.59201359,5.25590488 4.59201359,5.79409512 4.92395924,6.12604076 L7.29791847,8.5 L4.92395924,10.8739592 C4.59201359,11.2059049 4.59201359,11.7440951 4.92395924,12.0760408 C5.25590488,12.4079864 5.79409512,12.4079864 6.12604076,12.0760408 L8.5,9.70208153 L10.8739592,12.0760408 C11.2059049,12.4079864 11.7440951,12.4079864 12.0760408,12.0760408 C12.4079864,11.7440951 12.4079864,11.2059049 12.0760408,10.8739592 L9.70208153,8.5 L12.0760408,6.12604076 C12.4079864,5.79409512 12.4079864,5.25590488 12.0760408,4.92395924 C11.7440951,4.59201359 11.2059049,4.59201359 10.8739592,4.92395924 L8.5,7.29791847 L8.5,7.29791847 Z"></path>
                                        </svg>
                                        <span class="message"></span>
                                    </div>
                                </div>

                                <div>
                                    @if (ViewBag.paycards != null)
                                    {
                                        <div id="div_previousCard">
                                            @foreach (var item in ViewBag.paycards)
                                            {
                                                <p>
                                                    Card ending in <b>@item.Last4</b>
                                                    @*<img class="pull-right" src="~/Content/Images/visa-icon.png" />*@
                                                </p>

                                                <p>Expiry <b>@item.ExpMonth/@item.ExpYear</b></p>
                                            }
                                            <br />
                                            <a href="#" class="btn_displayNewCard">[Edit]</a>
                                            <br />
                                        </div>
                                    }
                                </div>

                            </fieldset>

                            <button id="submit">
                                <div id="spinner" class="hidden"></div>
                                <span id="button-text">Subscribe to the Plan</span>
                            </button>
                            <fieldset class="text-center mt-1">
                                <a class="Link Link--primary text-center " style="color:#909090" href="https://stripe.com" target="_blank"><span class="Text Text-color--gray400 Text-fontSize--12 Text-fontWeight--400"><span>Powered by <img src="https://js.stripe.com/v3/fingerprinted/img/stripe-8ad2522ef8799d5985038700f8a07027.svg" alt="stripe" style="width:45px;" class="Icon Footer-PoweredBy-Icon Icon--md"></span></span></a>
                            </fieldset>
                        </form>
                        <div class="success">
                            <h3 class="title" id="successtitle" style="font-size:20px;color:green" data-tid="elements_examples.success.title">Success</h3>
                            <img id="successimg" style="width:140px;" src="~/Content/Images/success.jpg" />

                            <p class="message" style="font-size:13px;color:green"><span id="cmessage" data-tid="elements_examples.success.message"></span></p>
                            <div id="paymentloader" class="icon hidden">
                                <svg width="84px" height="84px" viewBox="0 0 84 84" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
                                    <circle class="border" cx="42" cy="42" r="40" stroke-linecap="round" stroke-width="4" stroke="#000" fill="none"></circle>
                                    <path class="checkmark" stroke-linecap="round" stroke-linejoin="round" d="M23.375 42.5488281 36.8840688 56.0578969 64.891932 28.0500338" stroke-width="4" stroke="#000" fill="none"></path>
                                </svg>
                            </div>

                            <a class="btn btn-primary btn-lg btn-block" id="successbtn" style="padding:10px;padding-top:10px;" href="~/Profile/Basic?socialProfileId=@ViewBag.socialProfileId">Continue</a>
                        </div>
                    </div>
                </div>
                @*<div class="modal-footer">
                        <button type="button" class="btn grey btn-outline-secondary" data-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-outline-primary">Save changes</button>
                    </div>*@
            </div>
        </div>
    </div>
    <div id="Modal_ConfirmDeletion" class="modal fade" data-backdrop="static" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title text-left">Cancel subscription!</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                </div>
                <div class="modal-body">

                    <h3 style="color:red;margin-bottom:10px;">Are you sure you want to cancel your Plan? This action is not reversible!</h3>
                    <input type="hidden" id="hdn_DeleteItemId" value="" />
                    <input type="text" id="deleteConfirmation" style="width:100%" placeholder="Type in 'DELETE ME' to continue" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary btn_ConfirmDelete">Delete Permanently</button>
                </div>
            </div>

        </div>
    </div>

    <div class="page-wrapper auth">
        <div class="page-inner bg-brand-gradient">
            <div class="page-content-wrapper bg-transparent m-0">
                <div class="height-10 w-100 shadow-lg px-4 bg-brand-gradient">
                    <div class="d-flex align-items-center container p-0">
                        <div class="page-logo width-mobile-auto m-0 align-items-center justify-content-center p-0 bg-transparent bg-img-none shadow-0 height-9 border-0">
                            <a href="javascript:void(0)" class="page-logo-link press-scale-down d-flex align-items-center">
                                <img src="~/Content/Theme-SPPro/img/core-img/SPProWhite.png" alt="SmartAdmin WebApp" aria-roledescription="logo">

                            </a>
                        </div>
                        <span class="text-white opacity-50 ml-auto mr-2 hidden-sm-down">

                        </span>
                        <a href="~/account/logout" class="btn-link text-white ml-auto ml-sm-0">
                            Sign Off
                        </a>
                    </div>
                </div>
                <div class="flex-1" style="background: url(/Content/Theme-SPPro/img/svg/pattern-1.svg) no-repeat center bottom fixed; background-size: cover;">
                    <div class="container py-4 py-lg-5 my-lg-5 px-4 px-sm-0">
                        <div class="row">
                            <div class="col-xl-12">
                                <h2 class="fs-xxl fw-500 mt-4 text-white text-center">
                                    Hello @customer.FirstName
                                    <small class="h3 fw-300 mt-3 mb-5 text-white opacity-60 ">
                                        Attract New Connections & Leads Everyday.

                                    </small>
                                </h2>
                            </div>
                            <form id="js-login" novalidate="" action="" class="w-100">
                                <div class="col-xl-6 ml-auto mr-auto ">



                                    @if ((Model.SocialProfile.PaymentPlanId == null || Model.SocialProfile.PaymentPlanId.Value == 1) && (customer.IsBroker ?? false) == false)
                                    {
                                        @Html.Partial("Partial/payment", Model)
                                    }

                                    else if ((customer.IsBroker ?? false) == false && Model.SocialProfile.PaymentPlanId != 1)
                                    {
                                        @Html.Partial("Partial/viewinfo", Model)
                                    }
                                    else if ((customer.IsBroker ?? false) == true )
                                    {
                                        @Html.Partial("Partial/viewinfoAfilliate", Model)
                                    }

                                </div>
                            </form>
                        </div>
                    </div>
                    <div class="position-absolute pos-bottom pos-left pos-right p-3 text-center text-white">2021 © Connect Wizz</div>
                </div>
            </div>
        </div>
    </div>
    <!-- BEGIN Color profile -->
    <!-- this area is hidden and will not be seen on screens or screen readers -->
    <!-- we use this only for CSS color refernce for JS stuff -->
    <p id="js-color-profile" class="d-none">
        <span class="color-primary-50"></span>
        <span class="color-primary-100"></span>
        <span class="color-primary-200"></span>
        <span class="color-primary-300"></span>
        <span class="color-primary-400"></span>
        <span class="color-primary-500"></span>
        <span class="color-primary-600"></span>
        <span class="color-primary-700"></span>
        <span class="color-primary-800"></span>
        <span class="color-primary-900"></span>
        <span class="color-info-50"></span>
        <span class="color-info-100"></span>
        <span class="color-info-200"></span>
        <span class="color-info-300"></span>
        <span class="color-info-400"></span>
        <span class="color-info-500"></span>
        <span class="color-info-600"></span>
        <span class="color-info-700"></span>
        <span class="color-info-800"></span>
        <span class="color-info-900"></span>
        <span class="color-danger-50"></span>
        <span class="color-danger-100"></span>
        <span class="color-danger-200"></span>
        <span class="color-danger-300"></span>
        <span class="color-danger-400"></span>
        <span class="color-danger-500"></span>
        <span class="color-danger-600"></span>
        <span class="color-danger-700"></span>
        <span class="color-danger-800"></span>
        <span class="color-danger-900"></span>
        <span class="color-warning-50"></span>
        <span class="color-warning-100"></span>
        <span class="color-warning-200"></span>
        <span class="color-warning-300"></span>
        <span class="color-warning-400"></span>
        <span class="color-warning-500"></span>
        <span class="color-warning-600"></span>
        <span class="color-warning-700"></span>
        <span class="color-warning-800"></span>
        <span class="color-warning-900"></span>
        <span class="color-success-50"></span>
        <span class="color-success-100"></span>
        <span class="color-success-200"></span>
        <span class="color-success-300"></span>
        <span class="color-success-400"></span>
        <span class="color-success-500"></span>
        <span class="color-success-600"></span>
        <span class="color-success-700"></span>
        <span class="color-success-800"></span>
        <span class="color-success-900"></span>
        <span class="color-fusion-50"></span>
        <span class="color-fusion-100"></span>
        <span class="color-fusion-200"></span>
        <span class="color-fusion-300"></span>
        <span class="color-fusion-400"></span>
        <span class="color-fusion-500"></span>
        <span class="color-fusion-600"></span>
        <span class="color-fusion-700"></span>
        <span class="color-fusion-800"></span>
        <span class="color-fusion-900"></span>
    </p>
    <!-- END Color profile -->
    <!-- base vendor bundle:
         DOC: if you remove pace.js from core please note on Internet Explorer some CSS animations may execute before a page is fully loaded, resulting 'jump' animations
                    + pace.js (recommended)
                    + jquery.js (core)
                    + jquery-ui-cust.js (core)
                    + popper.js (core)
                    + bootstrap.js (core)
                    + slimscroll.js (extension)
                    + app.navigation.js (core)
                    + ba-throttle-debounce.js (core)
                    + waves.js (extension)
                    + smartpanels.js (extension)
                    + src/../jquery-snippets.js (core) -->
    <script src="/Content/Theme-SPPro/js/vendors.bundle.js"></script>
    <script src="/Content/Theme-SPPro/js/app.bundle.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/x-editable/1.5.1/bootstrap3-editable/js/bootstrap-editable.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="/Content/app-assets/vendors/js/forms/tags/tagging.min.js"></script>
    <script src="https://js.stripe.com/v3/"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@9"></script>
    <script src="~/Content/app-assets/vendors/js/extensions/sweetalert.min.js"></script>
    <script src="~/Content/app-assets/js/scripts/extensions/sweet-alerts.js"></script>
    <script>

        var socialProfileId = '@Model.SocialProfile.SocialProfileId';
        var selectedPlanName = '';
        var selectedPlanprice = '';
        var customerid = '@Model.SocialProfile.CustomerId';
        var currentPaymentPlan = 'FREE';

        var existingStripeCustomerIdVal = '';
        var existingStripeSubscriptionIdVal = '';
        var existingPlanIdVal = '';

         var existingStripeCustomerIdValSub = '';
        var existingStripeSubscriptionIdValSub = '';
        var existingPlanIdValSub = '';

        $("#js-login-btn").click(function (event) {

            // Fetch form to apply custom Bootstrap validation
            var form = $("#js-login")

            if (form[0].checkValidity() === false) {
                event.preventDefault()
                event.stopPropagation()
            }

            form.addClass('was-validated');
            // Perform ajax submit here...
        });

        var hashtagsengage, hashtagsengagebox, locationengage, locationengagebox, DirectCompetitors, DirectCompetitorsbox;

        $(document).ready(function () {

              $("#btnDeleteSubscription").on("click", function (e) {

                e.preventDefault();
                e.stopPropagation();


                Swal.fire({
                    title: "Cancel subscription!",
                    text: "Are you sure you want to cancel your Plan ? This action is not reversible!",
                    icon: "error",
                    showLoaderOnConfirm: true,
                    closeOnClickOutside: false,
                    showCancelButton: true,
                      confirmButtonColor: '#3085d6',
                      cancelButtonColor: '#d33',
                      confirmButtonText: "Yes Delete!",

                }).then(isConfirm => {
                    if (isConfirm.value) {

                         $("#Modal_ConfirmDeletion").modal("show");
                        //fetch('/profile/Confirmdelete', {
                        //    method: 'post',
                        //    headers: {
                        //        'Content-Type': 'application/json'
                        //    },
                        //    body: JSON.stringify({
                        //        socialProfileId: socialProfileId
                        //    })
                        //})
                        //    .then(subscription => {
                        //        //handleSubscription(subscription);.
                        //        Swal.close();
                        //        Swal.fire("Success!", "Your subscription & campaign has been deleted successfully;", "success")
                        //            .then(function () {
                        //                window.location = "/User/Home/";
                        //            });;
                        //    });
                    }
                    else {
                        //swal("OK", "It's safe.", "error");
                    }
                });


              });

            $(".btn_ConfirmDelete").on("click", function () {

                if ($("#deleteConfirmation").val() != "DELETE ME") {
                    var options = {};
                    $("#deleteConfirmation").effect("bounce", options, 500, null);
                    return false;
                }
                fetch('/profile/Confirmdelete', {
                            method: 'post',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                socialProfileId: socialProfileId
                            })
                        })
                            .then(subscription => {
                                //handleSubscription(subscription);.
                                $("#Modal_ConfirmDeletion").modal("hide");
                                Swal.close();
                                Swal.fire("Success!", "Your subscription has been deleted successfully", "success")
                                    .then(function () {
                                        window.location = "/";
                                    });
                            });


            });

            function UpdateData(pk, value) {



                var myKeyVals = { 'pk': pk, 'socialProfileId': @Html.Raw(Model.SocialProfile_Instagram_TargetingInformation.SocialProfileId), 'TargetingInformationId': @Html.Raw(Model.SocialProfile_Instagram_TargetingInformation.TargetingInformationId), 'value': value }
                //var myKeyVals = 'pk' : pk, 'socialProfileId' : 5, 'TargetingInformationId' : 2, 'value' : value }
                var saveData = $.ajax({
                    type: 'POST',
                    url: "/profile/SaveUpdateUserDataIndividually",
                    data: JSON.stringify(myKeyVals),
                    contentType: "application/jsonapplication/x-www-form-urlencoded; charset=UTF-8",
                    success: function (resultData) { toastr.success('Data Saved!', 'Success') }
                });

            }





            $(".ActivateTrial").on("click", function () {
                $(".selectedPlanName").text($(this).attr("data-planname") + " $" + $(this).attr("data-planprice") + " /pm");


                $("#selectedPlanId").val($(this).attr("data-planId"));

                selectedPlanName = $(".selectedPlanName").text();
                selectedPlanprice = $(".selectedPlanPrice").text();

                $(".selectedPlanPrice").text(" $" + $(this).attr("data-planprice") + " per month");
                $("#cmessage").multiline('Your subscription has been updated');
                $("#successbtn").text('Continue')







                $("#planSubscriptionModal").modal("show");
                return false;
            });


            $(".ActivateAfilliate").on("click", function () {
                $(".selectedPlanName").text($(this).attr("data-planname") + " $" + $(this).attr("data-planprice") + " /pm");


                $("#selectedPlanId").val($(this).attr("data-planId"));

                selectedPlanName = $(".selectedPlanName").text();
                selectedPlanprice = $(".selectedPlanPrice").text();

                $(".selectedPlanPrice").text(" $" + $(this).attr("data-planprice") + " per month");
                $("#cmessage").multiline('Your subscription has been updated');
                $("#successbtn").text('Continue')







                $("#planSubscriptionModal").modal("show");
                return false;
            });

             $.fn.multiline = function(text){
                this.text(text);
                this.html(this.html().replace(/\n/g,'<br/>'));
                return this;
            }




            ///////////////////////////////////////////////////////////////////////////////////striepe////////////////////////
            var stripe;

            var stripeElements = function (publicKey) {
                stripe = Stripe(publicKey);
                var elements = stripe.elements();

                // Element styles
                var style = {
                    base: {
                        fontSize: '16px',
                        color: '#32325d',
                        fontFamily:
                            '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, sans-serif',
                        fontSmoothing: 'antialiased',
                        '::placeholder': {
                            color: 'rgba(0,0,0,0.4)'
                        }
                    }
                };

                var card = elements.create('card', { hidePostalCode: true, style: style });
                card.mount('#card-element');

                // Element focus ring
                card.on('focus', function () {
                    var el = document.getElementById('card-element');
                    el.classList.add('focused');
                    fbq('track', 'AddPaymentInfo');
                });

                card.on('blur', function () {
                    var el = document.getElementById('card-element');
                    el.classList.remove('focused');
                });

                registerElements([card], 'example1', card);

                //document.querySelector('#submit').addEventListener('click', function (evt) {
                //    evt.preventDefault();
                //    changeLoadingState(true);
                //    // Initiate payment
                //    createPaymentMethodAndCustomer(stripe, card);
                //});
            };
            var example = null;
            function registerElements(elements, exampleName, card) {
                var formClass = '.' + exampleName;
                example = document.querySelector(formClass);

                var form = example.querySelector('form');
                var resetButton = example.querySelector('a.reset');
                var error = form.querySelector('.error');
                var errorMessage = error.querySelector('.message');

                function enableInputs() {
                    Array.prototype.forEach.call(
                        form.querySelectorAll(
                            "input[type='text'], input[type='email'], input[type='tel']"
                        ),
                        function (input) {
                            input.removeAttribute('disabled');
                        }
                    );
                }

                function disableInputs() {
                    Array.prototype.forEach.call(
                        form.querySelectorAll(
                            "input[type='text'], input[type='email'], input[type='tel']"
                        ),
                        function (input) {
                            input.setAttribute('disabled', 'true');
                        }
                    );
                }

                function triggerBrowserValidation() {
                    // The only way to trigger HTML5 form validation UI is to fake a user submit
                    // event.
                    var submit = document.createElement('input');
                    submit.type = 'submit';
                    submit.style.display = 'none';
                    form.appendChild(submit);
                    submit.click();
                    submit.remove();
                }

                // Listen for errors from each Element, and show error messages in the UI.
                var savedErrors = {};
                elements.forEach(function (element, idx) {
                    element.on('change', function (event) {
                        if (event.error) {
                            error.classList.add('visible');
                            savedErrors[idx] = event.error.message;
                            errorMessage.innerText = event.error.message;
                        } else {
                            savedErrors[idx] = null;

                            // Loop over the saved errors and find the first one, if any.
                            var nextError = Object.keys(savedErrors)
                                .sort()
                                .reduce(function (maybeFoundError, key) {
                                    return maybeFoundError || savedErrors[key];
                                }, null);

                            if (nextError) {
                                // Now that they've fixed the current error, show another one.
                                errorMessage.innerText = nextError;
                            } else {
                                // The user fixed the last error; no more errors.
                                error.classList.remove('visible');
                            }
                        }
                    });
                });

                // Listen on the form's 'submit' handler...
                form.addEventListener('submit', function (e) {

                    e.preventDefault();

                    // Trigger HTML5 validation UI on the form if any of the inputs fail
                    // validation.
                    var plainInputsValid = true;
                    Array.prototype.forEach.call(form.querySelectorAll('input'), function (
                        input
                    ) {
                        if (input.checkValidity && !input.checkValidity()) {
                            plainInputsValid = false;
                            return;
                        }
                    });
                    if (!plainInputsValid) {
                        triggerBrowserValidation();
                        return;
                    }

                    // Show a loading screen...
                    example.classList.add('submitting');

                    // Disable all inputs.
                    disableInputs();

                    // Gather additional customer data we may have collected in our form.
                    var name = form.querySelector('#' + exampleName + '-name');
                    var email = form.querySelector('#' + exampleName + '-email');
                    var phone = form.querySelector('#' + exampleName + '-phone');

                    debugger;

                    createPaymentMethodAndCustomer(stripe, card, name.value, email.value, phone.value);

                    // Use Stripe.js to create a token. We only need to pass in one Element
                    // from the Element group in order to create a token. We can also pass
                    // in the additional customer data we collected in our form.
                    //stripe.createToken(elements[0], additionalData).then(function (result) {
                    //    // Stop loading!
                    //    example.classList.remove('submitting');

                    //    if (result.token) {
                    //        // If we received a token, show the token ID.
                    //        example.querySelector('.token').innerText = result.token.id;
                    //        example.classList.add('submitted');
                    //    } else {
                    //        // Otherwise, un-disable inputs.
                    //        enableInputs();
                    //    }
                    //});
                });


            }


            function createPaymentMethodAndCustomer(stripe, card, name, email, phone) {


                var selectedPlanId = $('#selectedPlanId').val();

                stripe.createPaymentMethod('card', card, {
                    billing_details: {
                        email: email,
                        name: name,
                        phone: phone
                    }
                })
                    .then(function (result) {
                        if (result.error) {
                            showCardError(result.error);
                        }
                       else {
                            createCustomer(result.paymentMethod.id, email, selectedPlanId, customerid, socialProfileId, name, phone);
                        }
                    });
            }

            async function createCustomer(paymentMethod, cardholderEmail, selectedPlanId, customerid, socialProfileId, name, phone) {
                return fetch('/profile/CreateStripeCustomerSubscription', {
                    method: 'post',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        NewSubs: true,
                        email: cardholderEmail,
                        paymentmethod: paymentMethod,
                        selectedPlanId: selectedPlanId,
                        customerid: customerid,
                        socialProfileId: socialProfileId,
                        phone : phone

                    })
                })
                    .then(response => {

                        return response.json();
                    })
                    .then(subscription => {

                        handleSubscription(subscription);
                    });
            }


            function handleSubscription(subscription) {

                if (subscription.hasOwnProperty('StripeMessage')) {
                    document.querySelector('button').disabled = false;
                    document.querySelector('#spinner').classList.remove('loading');
                    document.querySelector('#button-text').classList.remove('hidden');
                    example.classList.remove('submitting');
                    example.classList.add('submitted');
                    $("#cmessage").multiline(subscription.StripeMessage);
                    $("#cmessage").css('color', 'red');
                    $("#successbtn").text('Close & Retry')
                    $("#successimg").hide();
                    $("#successtitle").multiline("Error encountered during card processing : ");
                    $("#successtitle").css('color', 'red');


                }
                else {
                    const { latest_invoice } = subscription;
                    const { payment_intent } = latest_invoice;



                    if (payment_intent) {
                        const { client_secret, status } = payment_intent;

                        if (status === 'requires_action' || status === 'requires_payment_method') {
                            stripe.confirmCardPayment(client_secret).then(function (result) {
                                if (result.error) {
                                    // Display error message in your UI.
                                    // The card was declined (i.e. insufficient funds, card has expired, etc)
                                    //changeLoadingState(false);
                                    showCardError(result.error);
                                } else {
                                    // Show a success message to your customer
                                    confirmSubscription(subscription.id);
                                }
                            });
                        } else {
                            // No additional information was needed
                            // Show a success message to your customer
                            orderComplete(subscription);
                        }

                    } else {
                        orderComplete(subscription);

                    }
                }
            }

            function confirmSubscription(subscriptionId) {
                return fetch('/subscription', {
                    method: 'post',
                    headers: {
                        'Content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        subscriptionId: subscriptionId
                    })
                })
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (subscription) {
                        orderComplete(subscription);
                    });
            }


            /* ------- Post-payment helpers ------- */

            /* Shows a success / error message when the payment is complete */
            var orderComplete = function (subscription) {

                $("#paymentloader").hide();
                changeLoadingState(false);
                //var subscriptionJson = JSON.stringify(subscription, null, 2);
                example.classList.remove('submitting');
                example.classList.add('submitted');

                fbq('track', 'Purchase', {
                    value: 49,
                    currency: 'USD',
                });

                //alert(subscriptionJson);
                //document.querySelectorAll('.payment-view').forEach(function (view) {
                //    view.classList.add('hidden');
                //});
                //document.querySelectorAll('.completed-view').forEach(function (view) {
                //    view.classList.remove('hidden');
                //});
                //document.querySelector('.order-status').textContent = subscription.status;
                //document.querySelector('code').textContent = subscriptionJson;
            };

            // Show a spinner on subscription submission
            var changeLoadingState = function (isLoading) {
                if (isLoading) {
                    document.querySelector('#spinner').classList.add('loading');
                    document.querySelector('button').disabled = true;

                    document.querySelector('#button-text').classList.add('hidden');
                } else {
                    document.querySelector('button').disabled = false;
                    document.querySelector('#spinner').classList.remove('loading');
                    document.querySelector('#button-text').classList.remove('hidden');
                }
            };

            function showCardError(error) {
                //changeLoadingState(false);
                example.classList.remove('submitting');
                // The card was declined (i.e. insufficient funds, card has expired, etc)
                var errorMsg = document.querySelector('cmessage');
                errorMsg.textContent = error.message;

            }

            stripeElements('@ViewBag.stripePublishKey');

        });
    </script>
    <script src="//code.tidio.co/vs2afulzirphvfvcttbry1xhkgstiimk.js" async></script>

</body>
<!-- END Body -->
</html>
