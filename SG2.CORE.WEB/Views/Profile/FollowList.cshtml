@using SG2.CORE.MODAL.DTO.Customers;
@using SG2.CORE.COMMON;
@using SG2.CORE.MODAL;
@model SG2.CORE.MODAL.ViewModals.CRM.FollowListViewModel
@{

    ViewBag.Title = "Basic Profile";
    Layout = "~/Views/Shared/_Layout_LoggedInStack.cshtml";
    var custDto = (CustomerDTO)ViewBag.CustomerDTO;
    SocialProfile socialProfile = null;

    socialProfile = ViewBag.socialProfile;
    var socialProfileAccounts = (List<SocialProfile_FollowedAccounts>)ViewBag.socialProfileFollowedAccounts;
    var ProfileStatus = "";

    if (socialProfile.StatusId == (int)GlobalEnums.PlanSubscription.Active)
    {
        ProfileStatus = "Active (Free)";
    }
    else if (socialProfile.StatusId == (int)GlobalEnums.PlanSubscription.ActivePlan)
    {
        ProfileStatus = "Active (Plan)";
    }
    else if (socialProfile.StatusId == (int)GlobalEnums.PlanSubscription.canceled)
    {
        ProfileStatus = "Cancelled";
    }
    else if (socialProfile.StatusId == (int)GlobalEnums.PlanSubscription.Unsubscribe)
    {
        ProfileStatus = "Unsubscribed";
    }


    var PlanStatus = "";


    var statusclass = "btn-primary";

    if (socialProfile.StatusId == (int)GlobalEnums.PlanSubscription.Active)
    {
        PlanStatus = "Active (Free)";
    }
    else if (socialProfile.StatusId == (int)GlobalEnums.PlanSubscription.ActivePlan)
    {
        PlanStatus = "Active (Plan)";
    }
    else if (socialProfile.StatusId == (int)GlobalEnums.PlanSubscription.canceled)
    {
        PlanStatus = "Cancelled";
    }
    else if (socialProfile.StatusId == (int)GlobalEnums.PlanSubscription.Unsubscribe)
    {
        PlanStatus = "Unsubscribed";
    }

    switch (socialProfile.BlockedStatus)
    {
        case null: ProfileStatus = "Valid"; statusclass = "btn-primary"; break;
        case 0: ProfileStatus = "Valid"; statusclass = "btn-primary"; break;
        case 66: ProfileStatus = "Action Blocked"; statusclass = "btn-danger"; break;
        case 67: ProfileStatus = "Hard Blocked"; statusclass = "btn-danger"; break;
        case 68: ProfileStatus = "Password Blocked"; statusclass = "btn-danger"; break;
        case 70: ProfileStatus = "Block 4"; statusclass = "btn-danger"; break;
        case 71: ProfileStatus = "Block 5"; statusclass = "btn-danger"; break;
        default:
            ProfileStatus = "Valid"; statusclass = "btn-primary";
            break;
    }
    List<SelectListItem> followFilterList = new List<SelectListItem>();
    followFilterList.Add(new SelectListItem { Text = "Follow in last 33 days", Value = "2" });
    followFilterList.Add(new SelectListItem { Text = "UnFollow in last 33 days", Value = "3" });
}


@section styles{

    <link href="~/Content/app-assets/vendors/css/forms/tags/tagging.css" rel="stylesheet" />
    <link href="~/Content/app-assets/css/pincode.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="~/Content/app-assets/css/plugins/forms/validation/form-validation.css">
    <style>
        .pincode-input-text {
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }
    </style>
}

@section profileheader{
    @Html.Partial("Partial/_PartialProfileHeader", Model)
}


    <!-- BEGIN: Content-->
    <div class="app-content container center-layout mt-2">
        <div class="content-wrapper">

            <div class="content-body">
                <!-- Basic form layout section start -->
                <section id="horizontal-form-layouts">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title" id="horz-layout-basic">Follow History</h4>

                                </div>
                                <div class="card-content collpase show">
                                    <div class="card-body">

                                        @using (Html.BeginForm("FollowList", "Profile", FormMethod.Post, new { @id = "Form_FollowFilter" }))
                                        {
                                            <div class="col-md-2 col-sm-12 mb-2">
                                                <div class="product">
                                                    <label>Filter By</label>
                                                    <div class="select">
                                                        @Html.DropDownListFor(model => model.FilterBy, followFilterList, "All", new { onchange = "submit()" })
                                                    </div>
                                                </div>
                                            </div>
                                            @Html.HiddenFor(model => model.SocialProfileId, new { id = "sProfileId", Value = @socialProfile.SocialProfileId })
                                        }



                                        <div class="table-responsive mt-4">
                                            <table class="table table-xl mb-0">
                                                <thead>
                                                    <tr>
                                                        <th>IG Username</th>
                                                        <th>Status</th>
                                                        <th>Date/Time</th>

                                                    </tr>
                                                </thead>
                                                <tbody>
                                                    @foreach (var item in socialProfileAccounts.OrderBy(g => g.FollowedDateTime))
                                                    {
                                                        <tr>
                                                            <td scope="row">
                                                                @item.FollowedSocialUsername
                                                            </td>


                                                            <td>
                                                                @(item.StatusId == 1 ? "Followed" : "UnFollowed")
                                                            </td>
                                                            <td style="color:@(item.FollowedDateTime.Value < DateTime.Now.AddDays(-2) && item.StatusId == 1 ? "red" : "black")">
                                                                @item.FollowedDateTime.Value.ToShortDateString()  @item.FollowedDateTime.Value.ToLongTimeString()
                                                            </td>



                                                        </tr>
                                                    }
                                                </tbody>
                                            </table>
                                        </div>

                                    </div>


                                </div>
                            </div>
                        </div>
                    </div>

                </section>
                <!-- // Basic form layout section end -->
            </div>
        </div>
    </div>
    <!-- END: Content-->



