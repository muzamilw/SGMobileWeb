@using SG2.CORE.COMMON;
@using SG2.CORE.MODAL;
@using SG2.CORE.MODAL.DTO.PlanInformation;
@using SG2.CORE.MODAL.ViewModals.Customers;
@model SG2.CORE.MODAL.DTO.Customers.SocialProfileDTO
@{

    ViewBag.Title = "Match Filter";
    Layout = "~/Views/Shared/_Layout_LoggedInStack.cshtml";
    ViewBag.socialProfile = Model.SocialProfile;
    var ProfileStatus = "";
    if (Model.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.Active)
    {
        ProfileStatus = "Active (Free)";
    }
    else if (Model.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.ActivePlan)
    {
        ProfileStatus = "Active (Plan)";
    }
    else if (Model.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.canceled)
    {
        ProfileStatus = "Cancelled";
    }
    else if (Model.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.Unsubscribe)
    {
        ProfileStatus = "Unsubscribed";
    }

    var plans = (List<PlanInformationDTO>)ViewBag.Plans;
    var paycards = (List<CustomerPaymentCardsViewModel>)ViewBag.paycards;

}


@section styles{

    <link href="~/Content/app-assets/vendors/css/forms/tags/tagging.css" rel="stylesheet" />
    <link href="~/Content/app-assets/css/pincode.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="~/Content/app-assets/css/plugins/forms/checkboxes-radios.css">
    <link rel="stylesheet" type="text/css" href="~/Content/app-assets/css/plugins/forms/validation/form-validation.css">
    <link href="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/css/bootstrap4-toggle.min.css" rel="stylesheet">
    <style type="text/css">
               .weekDays-selector1 {
                   margin-top: 10px;
               }

               /**
        * The CSS shown here will not be introduced in the Quickstart guide, but shows
        * how you can use CSS to style your Element's container.
        */
               .StripeElement {
                   box-sizing: border-box;
                   height: 40px;
                   padding: 10px 12px;
                   border: 1px solid transparent;
                   border-radius: 4px;
                   background-color: white;
                   box-shadow: 0 1px 3px 0 #e6ebf1;
                   -webkit-transition: box-shadow 150ms ease;
                   transition: box-shadow 150ms ease;
                   width:500px;
               }

               .StripeElement--focus {
                   box-shadow: 0 1px 3px 0 #cfd7df;
               }

               .StripeElement--invalid {
                   border-color: #fa755a;
               }

               .StripeElement--webkit-autofill {
                   background-color: #fefde5 !important;
               }

               /* Can't see what I type without this */
               #card-number.form-control,
               #card-cvc.form-control,
               #card-exp.form-control {
                   display: inline-block;
               }
    </style>
}

@section profileheader{
    @Html.Partial("Partial/_PartialProfileHeader", Model)
}


<button type="button" class="btn btn-outline-primary block btn-lg" data-toggle="modal" data-target="#planSubscriptionModal">
    Launch Modal
</button>
<!-- Modal -->
<div class="modal fade text-left" id="planSubscriptionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel1" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel1">Subscribe to a plan</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form action="/charge" method="post" id="payment-form">
                    <div class="form-row">
                        <div class="selectedPlanName"></div>
                        <div class="selectedPlanPrice"></div>
                        <input type="hidden" id="selectedPlanId" />
                    
                    </div>
                    <div class="form-row">
                        <label for="card-element">
                            Credit or debit card
                        </label>
                        <input type="text" id="email" placeholder="Email" autocomplete="cardholder" class="sr-input">
                        <div id="card-element">
                            <!-- A Stripe Element will be inserted here. -->
                        </div>

                        <!-- Used to display form errors. -->
                        <div class="sr-field-error" id="card-errors" role="alert"></div>
                    </div>

                    <button id="submit">
                        <div id="spinner" class="hidden"></div>
                        <span id="button-text">Subscribe</span>
                    </button>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn grey btn-outline-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-outline-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<form class="form" id="formtarget" method="post" action="Target" novalidate>
    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.SocialProfileId)
    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.TargetingInformationId)

    <!-- BEGIN: Content-->
    <div class="app-content container center-layout mt-2">
        <div class="content-wrapper">



            <div class="content-body">
                <!-- Basic form layout section start -->
                <section id="horizontal-form-layouts">


                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title" id="horz-layout-basic">Targeting</h4>
                                    <a class="heading-elements-toggle"><i class="fa fa-ellipsis-v font-medium-3"></i></a>
                                    <div class="heading-elements">
                                        <ul class="list-inline mb-0">
                                            <li></li>

                                        </ul>
                                    </div>
                                </div>
                                <div class="card-content collpase show">
                                    <div class="card-body">


                                        <div class="form-body">
                                            <h4 class="form-section"><i class="ft-user"></i>Engagement Rules</h4>


                                            <div class="form-group">
                                                @*@Html.LabelFor(m => m.SocialProfile_Instagram_TargetingInformation.Preference1, new { @class = "" })*@
                                                @*<span style="display:block"> Please use this format for hashtags: #hashtag,#hashtag,#hashtag</span>*@
                                                <label>Choose hashtags you wish to engage with (select the most relevant hashtags according to the nature of your account):</label>
                                                <div id="hashtagsengage" class="edit-on-delete form-control" data-tags-input-name="wlextracted"> @Model.SocialProfile_Instagram_TargetingInformation.HashTagsToEngage</div>

                                                @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.HashTagsToEngage)

                                            </div>
                                            @*<div class="form-group">

                                                    <label>Choose the hashtags you DO NOT want to engage (Optional):</label>
                                                    <div id="hashtagsnotengage" class="edit-on-delete form-control" data-tags-input-name="wlextracted">@Model.SocialProfile_Instagram_TargetingInformation.HashTagsToNotEngage</div>
                                                    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.HashTagsToNotEngage)

                                                </div>*@
                                            <div class="form-group">
                                                @*<span style="display:block"> Please use this format for hashtags: #hashtag,#hashtag,#hashtag</span>*@
                                                <label>Choose towns, cities and countries that are best suited for your account (cities work best):</label>
                                                <div id="locationengage" class="edit-on-delete form-control" data-tags-input-name="wlextracted">@Model.SocialProfile_Instagram_TargetingInformation.LocationsToEngage</div>
                                                @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.LocationsToEngage)

                                            </div>
                                            <div class="form-group">
                                                @*@Html.LabelFor(m => m.SocialProfile_Instagram_TargetingInformation.Preference1, new { @class = "" })*@
                                                @*<span style="display:block"> Please use this format for hashtags: #hashtag,#hashtag,#hashtag</span>*@
                                                <label>Relevant or targeted accounts (Please add accounts with followers from 10-100k followers so your sources are niche but have enough sources as well)</label>
                                                <div id="DirectCompetitors" class="edit-on-delete form-control" data-tags-input-name="wlextracted">@Model.SocialProfile_Instagram_TargetingInformation.DirectCompetitors</div>
                                                @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.DirectCompetitors)

                                            </div>

                                            <div class="row">

                                                <div class="col-md-6">
                                                    <div class="form-group">
                                                        <label>
                                                            Do you want to engage with Females, Males or Both?
                                                        </label><br />
                                                        <fieldset class="radio">
                                                            <label class="form-radio" col-md-3>

                                                                @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.GenderEngagmentPref, "1")

                                                                <span class="checkmark">Males</span>
                                                            </label><br />
                                                            <label class="form-radio" col-md-3>

                                                                @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.GenderEngagmentPref, "2")

                                                                <span class="checkmark">Females</span>
                                                            </label><br />
                                                            <label class="form-radio" col-md-3>

                                                                @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.GenderEngagmentPref, "3")

                                                                <span class="checkmark">Both</span>
                                                            </label>
                                                        </fieldset>
                                                    </div>
                                                </div>
                                                <div class="col-md-6">

                                                    <div class="form-group">
                                                        <label>
                                                            Do you want to engage with Business Accounts?
                                                        </label><br />
                                                        <fieldset class="radio">
                                                            <label class="form-radio" col-md-3>

                                                                @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.IncludeBusinessAccounts, "1")

                                                                <span class="checkmark">Business Accounts</span>
                                                            </label><br />
                                                            <label class="form-radio" col-md-3>

                                                                @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.IncludeBusinessAccounts, "2")
                                                                <span class="checkmark">Personal Accounts</span>
                                                            </label><br />
                                                            <label class="form-radio" col-md-3>

                                                                @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.IncludeBusinessAccounts, "3")
                                                                <span class="checkmark">Both</span>
                                                            </label>
                                                        </fieldset>
                                                    </div>
                                                </div>

                                            </div>

                                        </div>

                                    </div>
                                </div>
                            </div>



                            <div class="row">
                                <div class="col-12 mt-1 mb-1">
                                    <h4 class="text-uppercase">Select a Plan</h4>
                                </div>
                            </div>
                            <div class="row match-height">
                                @foreach (var plan in plans)
                                {
                                    <div class="col-xl-4 col-md-6 col-sm-12">
                                        <div class="card">
                                            <div class="card-content">
                                                <img class="card-img-top img-fluid" src="~/content/app-assets/images/carousel/05.jpg" alt="Card image cap">
                                                <div class="card-body">
                                                    <h4 class="card-title">@plan.PlanName</h4>
                                                    <p class="card-text">
                                                        @Html.Raw(plan.PlanDescription.Replace("\n", "<br>"))
                                                    </p>@if (Model.SocialProfile.PaymentPlanId == plan.PlanId)
                                                    {
                                                        <a href="#" class="btn btn-outline-primary disabled">Current Plan</a>
                                                    }
                                                    else
                                                    {
                                                        <a href="#" class="btn btn-outline-pink planSelect" data-planId="@plan.PlanId" data-planname="@plan.PlanName" data-planprice="@plan.PlanPrice" >Subscribe</a>
                                                    }

                                                </div>
                                            </div>
                                        </div>
                                    </div>





                                }
                            </div>

                            <div class="card">
                                <div class="card-content collpase show">
                                    <div class="card-body">
                                        <h4 class="form-section"><i class="ft-user"></i>Daily Operation Activity Limits</h4>
                                        <div class="row mb-1">
                                            <div class="col-md-6">
                                                <div class="col-md-7 pd-0 float-left">
                                                    <label class=" mgt-8">Follow new accounts by Search tags</label>
                                                </div>
                                                <div class="col-md-3 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.FollNewPerDayLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>
                                                <div class="col-md-2  pd-0  float-left p-0 m-0">
                                                    <label class="mgt-8">per day</label>
                                                </div>

                                            </div>
                                            <div class="col-md-3">
                                                <div class="col-md-8 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        Increase daily with
                                                    </label>
                                                </div>
                                                <div class="col-md-4 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.FollDailyIncreaseLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>

                                            </div>
                                            <div class="col-md-3">
                                                <div class="col-md-8 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        untill it reaches
                                                    </label>
                                                </div>
                                                <div class="col-md-4 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.FollMaxPerDayLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>
                                            </div>
                                        </div>
                                        <div class="row mb-1">
                                            <div class="col-md-6">
                                                <div class="col-md-7 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        Un-Follow after 16 days of engaging
                                                    </label>
                                                </div>
                                                <div class="col-md-3 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollNewPerDayLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>
                                                <div class="col-md-2  pd-0  float-left p-0 m-0">
                                                    <label class="mgt-8">per day</label>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="col-md-8 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        Increase daily with
                                                    </label>
                                                </div>
                                                <div class="col-md-4 pd-0  float-left" ">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollDailyIncreaseLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>

                                            </div>
                                            <div class="col-md-3">
                                                <div class="col-md-8 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        untill it reaches
                                                    </label>
                                                </div>
                                                <div class="col-md-4 pd-0   float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollMaxPerDayLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>

                                            </div>
                                        </div>
                                        <div class="row mb-1">
                                            <div class="col-md-6">
                                                <div class="col-md-7 pd-0   float-left">
                                                    <label class=" mgt-8">
                                                        Like on Followings Posts
                                                    </label>
                                                </div>
                                                <div class="col-md-3 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.LikePerDayLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>
                                                <div class="col-md-2  pd-0  float-left p-0 m-0">
                                                    <label class="mgt-8">per day</label>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="col-md-8 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        Increase daily with
                                                    </label>
                                                </div>
                                                <div class="col-md-4 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.LikeDailyIncreaseLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="col-md-8 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        untill it reaches
                                                    </label>
                                                </div>
                                                <div class="col-md-4 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.LikeMaxPerDayLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>

                                            </div>
                                        </div>

                                        <div class="row mb-1">
                                            <div class="col-md-6">
                                                <div class="col-md-7 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        View stories by Followings
                                                    </label>
                                                </div>
                                                <div class="col-md-3 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.ViewStoriesPerDayLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>
                                                <div class="col-md-2  pd-0  float-left p-0 m-0">
                                                    <label class="mgt-8">per day</label>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="col-md-8 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        Increase daily with
                                                    </label>
                                                </div>
                                                <div class="col-md-4 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.ViewStoriesDailyIncreaseLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>

                                            </div>
                                            <div class="col-md-3">
                                                <div class="col-md-8 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        untill it reaches
                                                    </label>
                                                </div>
                                                <div class="col-md-4 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.ViewStoriesMaxPerDayLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>

                                            </div>
                                        </div>

                                        <div class="row mb-1">
                                            <div class="col-md-6">
                                                <div class="col-md-7 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        Comment on Following POSTS
                                                    </label>
                                                </div>
                                                <div class="col-md-3 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.CommentPerDayLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>
                                                <div class="col-md-2  pd-0  float-left p-0 m-0">
                                                    <label class="mgt-8">per day</label>
                                                </div>
                                            </div>
                                            <div class="col-md-3">
                                                <div class="col-md-8 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        Increase daily with
                                                    </label>
                                                </div>
                                                <div class="col-md-4 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.CommentDailyIncreaseLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>

                                            </div>
                                            <div class="col-md-3">
                                                <div class="col-md-8 pd-0  float-left">
                                                    <label class=" mgt-8">
                                                        untill it reaches
                                                    </label>
                                                </div>
                                                <div class="col-md-4 pd-0  float-left">
                                                    @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.CommentMaxPerDayLim, new { htmlAttributes = new { style = "width:65px;", required = "required" } })
                                                </div>

                                            </div>
                                        </div>



                                    </div>
                                </div>
                            </div>
                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title form-section">Follow</h4>
                                    <a class="heading-elements-toggle"><i class="fa fa-ellipsis-v font-medium-3"></i></a>
                                    <div class="heading-elements">
                                        <ul class="list-inline mb-0">
                                            <li><input id="FollowOn" type="checkbox" checked data-toggle="toggle" data-onstyle="success" value="@Model.SocialProfile_Instagram_TargetingInformation.FollowOn"></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="card-content collpase show">
                                    <div class="card-body">
                                        <div class="col-md-12">
                                            <fieldset>


                                                @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.FollowOn)

                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.FollUserProfileImage, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.FollUserProfileImage)*@
                                                        <label for="weekday-mon">Only target users who have a profile image?</label>
                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.FollUserMinPosts, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.FollUserMinPosts)*@
                                                        <label for="weekday-mon">Minimum posts on user account to target</label>
                                                        @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.FollUserMinPostsVal, new { type = "number", style = "width:65px;" })
                                                        @*@Html.EditorFor(m=>m.FollUserMinPosts)*@
                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.FollUserPostsLastXDays, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.FollUserPostsLastXDays)*@
                                                        <label for="weekday-mon">Users last post should be between </label>
                                                        @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.FollUserPostsLastXDaysVal, new { type = "number", style = "width:65px;" }) days
                                                    </div>

                                                </div>

                                                @*<div class="col-md-12">
                                                        <div class="weekDays-selector1">
                                                            @Html.CheckBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.FollCheckPostsCapBlackList.Value, new { @class = "weekday" })
                                                            @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.FollCheckPostsCapBlackList)
                                                            <label for="weekday-mon">Check most recent posts caption for Black list words</label>
                                                        </div>

                                                    </div>*@
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">

                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.FollDoNotFollowUsernamewithdigits, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.FollDoNotFollowUsernamewithdigits)*@
                                                        <label for="weekday-mon">Account should have no more than  </label> @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.FollDoNotFollowUsernamewithdigitsVal, new { type = "number", style = "width:65px;" })<label> digits in their username</label>
                                                    </div>

                                                </div>

                                                @*<div class="col-md-12">
                                                        <div class="weekDays-selector1">
                                                            <label for="weekday-mon">Wait between</label> @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.FollowWaitBetweenActionsVal2, new { style = "width:65px;", type = "number" })  seconds before each action e.g follow, comments and view
                                                        </div>

                                                    </div>*@
                                                @*<div class="col-md-12">

                                                        <div class="weekDays-selector1">

                                                            @Html.CheckBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.FollowCompetitorsFollowers.Value, new { @class = "weekday" })
                                                            @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.FollowCompetitorsFollowers)
                                                            <label for="weekday-mon">Follow COMPETITORS followers Select </label> @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.FollowCompetitorsFollowersVal, new { style = "width:65px;", type = "number" })<label>  random competitors followers daily</label>
                                                        </div>

                                                    </div>*@
                                                @*<div class="col-md-12">

                                                        <div class="weekDays-selector1">
                                                            @Html.CheckBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.FollowUsersfromHashtagResults.Value, new { @class = "weekday" })
                                                            @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.FollowUsersfromHashtagResults)
                                                            <label for="weekday-mon">Follower Users from HASHTAG search results. Select any random post from top</label> @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.FollowUsersfromHashtagResultsVal, new { style = "width:65px;", type = "number" }) <label> posts result</label>
                                                        </div>

                                                    </div>*@

                                            </fieldset>
                                        </div>

                                        <div class="col-md-12">
                                            <fieldset>
                                                <h4 class="mt-2 mb-1">AFTER FOLLOW ACTIONS:</h4>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.AfterFollLikeuserPosts, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.AfterFollLikeuserPosts)*@
                                                        <label for="weekday-mon">Like users latest posts</label>
                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">

                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.AfterFollCommentUserPosts, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.AfterFollCommentUserPosts)*@
                                                        <label for="weekday-mon">Comment on user’s latest posts</label>
                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.AfterFollViewUserStory, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.AfterFollViewUserStory)*@
                                                        <label for="weekday-mon">View user’s stories</label>
                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.AfterFollMuteUser, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.AfterFollMuteUser)*@
                                                        <label for="weekday-mon">Mute user after follow</label>
                                                    </div>

                                                </div>

                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.FollUserLangs, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.FollUserLangs)*@
                                                        <label for="weekday-mon">Follow users ONLY in these Languages</label><select><option>English</option></select>
                                                    </div>

                                                </div>

                                            </fieldset>
                                        </div>
                                    </div>

                                </div>
                            </div>


                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title form-section">UN-FOLLOW</h4>
                                    <a class="heading-elements-toggle"><i class="fa fa-ellipsis-v font-medium-3"></i></a>
                                    <div class="heading-elements">
                                        <ul class="list-inline mb-0">
                                            <li><input id="unFollowOn" type="checkbox" checked data-toggle="toggle" data-onstyle="success" value="@Model.SocialProfile_Instagram_TargetingInformation.UnFollowOn"></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="card-content collpase show">
                                    <div class="card-body">

                                        <div class="col-md-12">
                                            <fieldset>


                                                @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollowOn)


                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">

                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollFollowersAfterMinDays, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollFollowersAfterMinDays)*@
                                                        <label for="weekday-mon">Unfollow users after a minimum of </label>@Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollFollowersAfterMinDaysVal, new { style = "width:65px;", type = "number" }) <label> days of engaging with them</label>
                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollDoNotUnFollowLikersOfPosts, new { @class = "weekday" })
                                                        @**@@*Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollDoNotUnFollowLikersOfPosts)*@
                                                        <label for="weekday-mon">Keep following users who liked recent posts </label>@Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollDoNotUnFollowLikersOfPostsCount, new { style = "width:65px;", type = "number" })<label> posts</label>
                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollDoNotUnFollowCommThatCommented, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollDoNotUnFollowCommThatCommented)*@

                                                        <label for="weekday-mon">Keep following users who commented on recent </label> @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollDoNotUnFollowCommThatCommentedCount, new { style = "width:65px;", type = "number" })<label> posts</label>
                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">

                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollUseWhiteList, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollUseWhiteList)*@
                                                        <label for="weekday-mon">Enable whitelist</label>
                                                    </div>

                                                </div>

                                            </fieldset>
                                        </div>
                                    </div>
                                </div>
                            </div>



                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title form-section">COMMENTS</h4>
                                    <a class="heading-elements-toggle"><i class="fa fa-ellipsis-v font-medium-3"></i></a>
                                    <div class="heading-elements">
                                        <ul class="list-inline mb-0">
                                            <li><input id="ContactMembersOn" type="checkbox" checked data-toggle="toggle" data-onstyle="success" value="@Model.SocialProfile_Instagram_TargetingInformation.ContactMembersOn"></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="card-content collpase show">
                                    <div class="card-body">


                                        <div class="col-md-12">
                                            <fieldset>

                                                @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.ContactMembersOn)

                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.CommUsrRecentPosts, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.CommUsrRecentPosts)*@
                                                        <label for="weekday-mon">Comment users most posts </label>@Html.TextBoxFor(x => x.SocialProfile_Instagram_TargetingInformation.CommUsrRecentPostsVal, new { style = "width:65px;", type = "number" })<label>most recent posts</label>
                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        <label for="weekday-mon">Comment only</label><br />

                                                        @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.CommUsrRecentPostsTypes, "1")
                                                        <label for="weekday-mon">Image</label>
                                                        <br />
                                                        @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.CommUsrRecentPostsTypes, "2")

                                                        <label for="weekday-mon">Videos</label>
                                                        <br />
                                                        @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.CommUsrRecentPostsTypes, "3")

                                                        <label for="weekday-mon">Images and Videos</label>
                                                        <br />
                                                        @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.CommUsrRecentPostsTypes, "4")
                                                        <label for="weekday-mon">Albums</label>
                                                        <br />
                                                        @Html.RadioButtonFor(m => m.SocialProfile_Instagram_TargetingInformation.CommUsrRecentPostsTypes, "5")
                                                        <label for="weekday-mon">All</label>
                                                        <br />


                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.CommUserPostedWithinXDays, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.CommUserPostedWithinXDays)*@
                                                        <label for="weekday-mon">Posted within the last X days</label>
                                                        @Html.TextBoxFor(x => x.SocialProfile_Instagram_TargetingInformation.CommUserPostedWithinXDaysVal, new { style = "width:65px;", type = "number" })
                                                    </div>

                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">

                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.CommFltrPostsByLike, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.CommFltrPostsByLike)*@

                                                        <label for="weekday-mon">Only comment on posts that have more than </label> @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.CommFltrPostsByLikeCount, new { style = "width:65px;", type = "number" }) <label> likes already</label>


                                                    </div>
                                                </div>
                                                <div class="col-md-12">
                                                    <div class="weekDays-selector1">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.CommDelCommAfterXDays, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.CommDelCommAfterXDays)*@
                                                        <label for="weekday-mon">Delete comment after</label>@Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.CommDelCommAfterXDaysCount, new { style = "width:65px;", type = "number" }) <label>days</label>
                                                    </div>

                                                </div>
                                                <div class="row mt-1 mb-1">
                                                    <div class="col-md-2 float-left">

                                                        <label for="weekday-mon">Comment line 1</label>

                                                    </div>
                                                    <div class="col-md-10 float-left">
                                                        @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.CommLine1, new { @class = "form-control" })

                                                    </div>

                                                </div>
                                                <div class="row mb-1">
                                                    <div class="col-md-2 float-left">

                                                        <label for="weekday-mon">Comment line 2</label>

                                                    </div>
                                                    <div class="col-md-10 float-left">

                                                        @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.CommLine2, new { @class = "form-control" })

                                                    </div>

                                                </div>
                                                <div class="row mb-1">
                                                    <div class="col-md-2 float-left">

                                                        <label for="weekday-mon">Comment line 3</label>

                                                    </div>
                                                    <div class="col-md-10 float-left">

                                                        @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.CommLine3, new { @class = "form-control" })

                                                    </div>

                                                </div>
                                                <div class="row mb-1">
                                                    <div class="col-md-2 float-left">
                                                        <label for="weekday-mon">Comment line 4</label>
                                                    </div>
                                                    <div class="col-md-10 float-left">

                                                        @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.CommLine4, new { @class = "form-control" })

                                                    </div>

                                                </div>
                                                <div class="row mb-1">
                                                    <div class="col-md-2 float-left">

                                                        <label for="weekday-mon">Comment line 5</label>

                                                    </div>
                                                    <div class="col-md-10 float-left">

                                                        @Html.TextBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.CommLine5, new { @class = "form-control" })

                                                    </div>

                                                </div>

                                            </fieldset>
                                        </div>
                                    </div>
                                </div>
                            </div>




                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title form-section">Run Timer for APP daily operations</h4>
                                    <a class="heading-elements-toggle"><i class="fa fa-ellipsis-v font-medium-3"></i></a>
                                    <div class="heading-elements">
                                        <ul class="list-inline mb-0">
                                            <li></li>
                                        </ul>
                                    </div>
                                </div>
                                <div class="card-content collpase show">
                                    <div class="card-body">

                                        <div class="row">
                                            <div class="col-md-4">
                                                <span>Execute Between</span>
                                                <div class="row">


                                                    <div class="form-group col-12 mb-2 interval-repeater">
                                                        <div data-repeater-list="group-a">
                                                            <div data-repeater-item>
                                                                <div class="row">
                                                                    <input type="hidden" name="starttime" value="" />
                                                                    <input type="hidden" name="endtime" value="" />
                                                                    <div class="col-md-5"><input type="time" class="form-control" name="sc" onchange="schandler(event);" /></div>
                                                                    <div class="col-md-5"><input type="time" class="form-control" name="ec" onchange="echandler(event);" /></div>
                                                                    <div class="col-md-2">
                                                                        <a data-repeater-delete value="" class="btn btn-icon btn-danger mr-1 mb-1">
                                                                            <i class="fa fa-remove"></i>
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                            </div>

                                                        </div>
                                                        <button type="button" data-repeater-create class="btn btn-primary">
                                                            <i class="icon-plus4"></i> Add Interval
                                                        </button>
                                                    </div>

                                                    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.ExecutionIntervals)
                                                </div>

                                                @*<div class="row">
                                                        <div class="col-md-12 mt-2">
                                                            @Html.CheckBoxFor(m => m.SocialProfile_Instagram_TargetingInformation.RandomizeIntervalsDaily.Value)
                                                            @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.RandomizeIntervalsDaily)
                                                            <label for="weekday-mon">Randomly internal daily</label>
                                                        </div>

                                                    </div>*@

                                            </div>
                                            <div class="col-md-8">
                                                <div class="col-md-12">
                                                    <span>Days of the week when to operate</span>
                                                </div>
                                                <div class="col-md-12 mt-1">
                                                    <div class="weekDays-selector">
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.MonOper, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.MonOper)*@

                                                        <label for="weekday-mon">Monday</label>

                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.TueOper, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.TueOper)*@

                                                        <label for="weekday-tue">Tueday</label>

                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.WedOper, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.WedOper)*@

                                                        <label for="weekday-wed">Wednesday</label>
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.ThuOper, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.ThuOper)*@
                                                        <label for="weekday-thu">Thursday</label>
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.FriOper, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.FriOper)*@
                                                        <label for="weekday-fri">Friday</label><br />
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.SatOper, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.SatOper)*@
                                                        <label for="weekday-sat">Saturday</label>
                                                        @Html.EditorFor(m => m.SocialProfile_Instagram_TargetingInformation.SunOper, new { @class = "weekday" })
                                                        @*@Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.SunOper)*@
                                                        <label for="weekday-sun">Sunday</label>
                                                    </div>
                                                </div>


                                            </div>
                                        </div>
                                        <div class="form-actions text-center">

                                            <button type="submit" class="btn btn-primary">
                                                <i class="fa fa-check-square-o"></i> Save
                                            </button>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>






                <!-- // Basic form layout section end -->
            </div>
        </div>
    </div>
    <!-- END: Content-->
</form>
<style>
    .setboxshadow {
        border-radius: 0.15rem;
    }
</style>


<div id="Modal_ConfirmPaymentPlan" class="modal fade" data-backdrop="static" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">

            <div class="modal-header">
                <!--       <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h3 class="modal-title color-crimson">Confirm &amp; Pay</h3>
                    </div>
                -->
                <div class="modal-body">


                </div>
            </div>
        </div>
    </div>
</div>

<div id="Modal_SuccessActivePlan" class="modal fade" data-backdrop="static" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <!--  <button type="button" class="close" data-dismiss="modal">&times;</button>
                -->
            <div class="div_ModalBody">
                <div class="div_successActivePlan">
                    <h3 class="color-crimson popupHeading">Congratulations, Your subscription has been activated.</h3>
                    <br />
                    <p>
                        <span class="note">Note:</span> <br />
                        Reports will be avaiable after 5 days of activity
                    </p>
                    <br />
                    <button type="button" class="btn btn-default btnnewheight" data-dismiss="modal">Ok, Got it</button>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts{
    <script src="https://js.stripe.com/v3/"></script>
    <script src="~/Content/app-assets/js/scripts/bootstrap-pincode-input.js"></script>
    <script src="~/Content/app-assets/vendors/js/forms/tags/tagging.min.js"></script>
    <!-- BEGIN: Page Vendor JS-->
    <script src="~/Content/app-assets/vendors/js/forms/repeater/jquery.repeater.min.js"></script>
    @*<script src="~/Content/app-assets/js/scripts/forms/form-repeater.js"></script>*@

    <script src="~/Content/app-assets/vendors/js/forms/icheck/icheck.min.js"></script>
    <script src="~/Content/app-assets/vendors/js/forms/validation/jqBootstrapValidation.js"></script>
    <script src="~/Content/app-assets/vendors/js/extensions/sweetalert.min.js"></script>
    <script src="~/Content/app-assets/js/scripts/extensions/sweet-alerts.js"></script>

    <!-- END: Page Vendor JS-->
    <script type="text/javascript">
        $('#formtarget').submit(function (e) {
            document.getElementById("SocialProfile_Instagram_TargetingInformation_HashTagsToEngage").value = hashtagsengagebox.tagging("getTags").join(', ');

            //document.getElementById("SocialProfile_Instagram_TargetingInformation_HashTagsToNotEngage").value = hashtagsnotengagebox.tagging("getTags").join(', ');

            document.getElementById("SocialProfile_Instagram_TargetingInformation_LocationsToEngage").value = locationengagebox.tagging("getTags").join(', ');

            document.getElementById("SocialProfile_Instagram_TargetingInformation_DirectCompetitors").value = DirectCompetitorsbox.tagging("getTags").join(', ');
            debugger;
            if (repeater.repeaterVal()['group-a'].length > 0) {
                var intverl = JSON.stringify(repeater.repeaterVal()).replace('\"group-a\":', '');
                intverl = intverl.slice(1).slice(0, -1);
                console.log(intverl);
                $('#@Html.IdFor(m => m.SocialProfile_Instagram_TargetingInformation.ExecutionIntervals)').val(intverl);
            }
            //e.preventDefault();
            //return false;

            //$('input[type="checkbox"]').each(function () {

            //    var id = $(this).attr("id");
            //    var name = $(this).attr("name");

            //    if ($(this).is(":checked")) {
            //        $("input[name='" + name + "']").val("1");
            //    } else {
            //        $("input[name='" + name + "']").val("0");
            //    }
            //});



        });

        //time field change event handler
        function schandler(e) {
            console.log(getSiblings(e.target.parentNode));
            //alert(e.target.value);

            (getSiblings(e.target.parentNode)[1]).value = e.target.value;
        }

        function echandler(e) {
            console.log(getSiblings(e.target.parentNode)[3].name);
            //alert(e.target.value);
            (getSiblings(e.target.parentNode)[3]).value = e.target.value;
        }

        function getSiblings(el, filter) {
            var siblings = [];
            el = el.parentNode.firstChild;
            do { if (!filter || filter(el)) siblings.push(el); } while (el = el.nextSibling);
            return siblings;
        }

        function startFilter(el) {
            return el.nodeName.toLowerCase() == 'starttime';
        }

        var hashtagsengage, hashtagsengagebox, hashtagsnotengage, hashtagsnotengagebox, locationengage, locationengagebox, DirectCompetitors, DirectCompetitorsbox,repeater;
        $(document).ready(function () {
            /*******************************
            *       Simple Options         *
            *******************************/


            hashtagsengage = $("#hashtagsengage").tagging({
                "edit-on-delete": false,
                "no-spacebar": true,
                "tag-char": ''
            });
            hashtagsengagebox = hashtagsengage[0];

            //hashtagsnotengage = $("#hashtagsnotengage").tagging({
            //    "edit-on-delete": false,
            //    "no-spacebar": true,
            //    "tag-char": ''
            //});
            //hashtagsnotengagebox = hashtagsnotengage[0];

            locationengage = $("#locationengage").tagging({
                "edit-on-delete": false,
                "no-spacebar": true,
                "tag-char": ''
            });
            locationengagebox = locationengage[0];

            DirectCompetitors = $("#DirectCompetitors").tagging({
                "edit-on-delete": false,
                "no-spacebar": true,
                "tag-char": ''
            });
            DirectCompetitorsbox = DirectCompetitors[0];

            var FollowOn = '@Html.Raw(Model.SocialProfile_Instagram_TargetingInformation.FollowOn.Value ? "on" : "off")'
            $('#FollowOn').bootstrapToggle(FollowOn);
            $('#FollowOn').change(function () {
                $('#@Html.IdFor(m => m.SocialProfile_Instagram_TargetingInformation.FollowOn)').val($(this).prop('checked'));
            });


            var unFollowOn = '@Html.Raw(Model.SocialProfile_Instagram_TargetingInformation.UnFollowOn.Value ? "on" : "off")'
            $('#unFollowOn').bootstrapToggle(unFollowOn);
            $('#unFollowOn').change(function () {
                $('#@Html.IdFor(m => m.SocialProfile_Instagram_TargetingInformation.UnFollowOn)').val($(this).prop('checked'));
            });

            @*var StoryViewerOn = '@Html.Raw(Model.SocialProfile_Instagram_TargetingInformation.StoryViewerOn.Value ? "on" : "off")'
            $('#StoryViewerOn').bootstrapToggle(StoryViewerOn);
            $('#StoryViewerOn').change(function () {
                $('#@Html.IdFor(m => m.SocialProfile_Instagram_TargetingInformation.StoryViewerOn)').val($(this).prop('checked'));
            });*@

            var ContactMembersOn = '@Html.Raw(Model.SocialProfile_Instagram_TargetingInformation.ContactMembersOn.Value ? "on" : "off")'
            $('#ContactMembersOn').bootstrapToggle(ContactMembersOn);
            $('#ContactMembersOn').change(function () {
                $('#@Html.IdFor(m => m.SocialProfile_Instagram_TargetingInformation.ContactMembersOn)').val($(this).prop('checked'));
            });

            @*var LikeOn = '@Html.Raw(Model.SocialProfile_Instagram_TargetingInformation.LikeOn.Value ? "on" : "off")'
            $('#LikeOn').bootstrapToggle(LikeOn);
            $('#LikeOn').change(function () {
                $('#@Html.IdFor(m => m.SocialProfile_Instagram_TargetingInformation.LikeOn)').val($(this).prop('checked'));
            });*@





             @if (ViewBag.success == 1) {
                @:swal("Success!", "You have successfully saved target filtering information.It will be available for mobile app in next execution!", "success");
            }


            $('#pincode').pincodeInput({ hidedigits: false, inputs: 8 });

            // Custom Show / Hide Configurations
            repeater = $('.file-repeater, .interval-repeater').repeater({


                show: function () {
                    $(this).slideDown();

                    $(this).find("input[name*='sc']").val($(this).find("input[name*='starttime']").val());
                    $(this).find("input[name*='ec']").val($(this).find("input[name*='endtime']").val());
                },
                hide: function (remove) {
                    if (confirm('Are you sure you want to remove this item?')) {
                        $(this).slideUp(remove);
                    }
                }
            });

            var intv = '@Html.Raw(Model.SocialProfile_Instagram_TargetingInformation.ExecutionIntervals)';
            var intvlist = JSON.parse(intv)
            if (intvlist !== undefined)
                repeater.setList(intvlist);



            $(".planSelect").on("click", function () {
                $(".selectedPlanName").text("$" + $(this).attr("data-planname"));
                $(".selectedPlanprice").text("$" + $(this).attr("data-planprice"));
                $("#selectedPlanId").val("$" + $(this).attr("data-planId"));
               
               
                $("#planSubscriptionModal").modal("show");
            });


          

            var stripe;

            var stripeElements = function (publicKey) {
                stripe = Stripe(publicKey);
                var elements = stripe.elements();

                // Element styles
                var style = {
                    base: {
                        fontSize: '16px',
                        color: '#32325d',
                        fontFamily:
                            '-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, sans-serif',
                        fontSmoothing: 'antialiased',
                        '::placeholder': {
                            color: 'rgba(0,0,0,0.4)'
                        }
                    }
                };

                var card = elements.create('card', { style: style });

                card.mount('#card-element');

                // Element focus ring
                card.on('focus', function () {
                    var el = document.getElementById('card-element');
                    el.classList.add('focused');
                });

                card.on('blur', function () {
                    var el = document.getElementById('card-element');
                    el.classList.remove('focused');
                });

                document.querySelector('#submit').addEventListener('click', function (evt) {
                    evt.preventDefault();
                    changeLoadingState(true);
                    // Initiate payment
                    createPaymentMethodAndCustomer(stripe, card);
                });
            };

            function showCardError(error) {
                changeLoadingState(false);
                // The card was declined (i.e. insufficient funds, card has expired, etc)
                var errorMsg = document.querySelector('.sr-field-error');
                errorMsg.textContent = error.message;
                setTimeout(function () {
                    errorMsg.textContent = '';
                }, 8000);
            }

            var createPaymentMethodAndCustomer = function (stripe, card) {
                var cardholderEmail = document.querySelector('#email').value;
                var socialProfileId = @Model.SocialProfile.SocialProfileId;
                var customerid = @Model.SocialProfile.CustomerId;
                var selectedPlanId = $('#selectedPlanId').val();

                stripe.createPaymentMethod('card', card, {
                        billing_details: {
                            email: cardholderEmail,
                            name:'@Model.SocialProfile.SocialUsername'
                        }
                    })
                    .then(function (result) {
                        if (result.error) {
                            showCardError(result.error);
                        } else {
                            createCustomer(result.paymentMethod.id, cardholderEmail, selectedPlanId, customerid, socialProfileId);
                        }
                    });
            };

            async function createCustomer(paymentMethod, cardholderEmail, selectedPlanId, customerid, socialProfileId) {
                return fetch('/CreateStripeCustomerSubscription', {
                    method: 'post',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        email: cardholderEmail,
                        payment_method: paymentMethod,
                        selectedPlanId: selectedPlanId,
                        customerid = customerid,
                        socialProfileId = socialProfileId

                    })
                })
                    .then(response => {
                        return response.json();
                    })
                    .then(subscription => {
                        handleSubscription(subscription);
                    });
            }

            function handleSubscription(subscription) {
                const { latest_invoice } = subscription;
                const { payment_intent } = latest_invoice;

                if (payment_intent) {
                    const { client_secret, status } = payment_intent;

                    if (status === 'requires_action' || status === 'requires_payment_method') {
                        stripe.confirmCardPayment(client_secret).then(function (result) {
                            if (result.error) {
                                // Display error message in your UI.
                                // The card was declined (i.e. insufficient funds, card has expired, etc)
                                changeLoadingState(false);
                                showCardError(result.error);
                            } else {
                                // Show a success message to your customer
                                confirmSubscription(subscription.id);
                            }
                        });
                    } else {
                        // No additional information was needed
                        // Show a success message to your customer
                        orderComplete(subscription);
                    }
                } else {
                    orderComplete(subscription);
                }
            }

            function confirmSubscription(subscriptionId) {
                return fetch('/subscription', {
                    method: 'post',
                    headers: {
                        'Content-type': 'application/json'
                    },
                    body: JSON.stringify({
                        subscriptionId: subscriptionId
                    })
                })
                    .then(function (response) {
                        return response.json();
                    })
                    .then(function (subscription) {
                        orderComplete(subscription);
                    });
            }

            stripeElements('@ViewBag.stripePublishKey');
            /* ------- Post-payment helpers ------- */

            /* Shows a success / error message when the payment is complete */
            var orderComplete = function (subscription) {
                changeLoadingState(false);
                var subscriptionJson = JSON.stringify(subscription, null, 2);
                alert(subscriptionJson);
                //document.querySelectorAll('.payment-view').forEach(function (view) {
                //    view.classList.add('hidden');
                //});
                //document.querySelectorAll('.completed-view').forEach(function (view) {
                //    view.classList.remove('hidden');
                //});
                //document.querySelector('.order-status').textContent = subscription.status;
                //document.querySelector('code').textContent = subscriptionJson;
            };

            // Show a spinner on subscription submission
            var changeLoadingState = function (isLoading) {
                if (isLoading) {
                    document.querySelector('#spinner').classList.add('loading');
                    document.querySelector('button').disabled = true;

                    document.querySelector('#button-text').classList.add('hidden');
                } else {
                    document.querySelector('button').disabled = false;
                    document.querySelector('#spinner').classList.remove('loading');
                    document.querySelector('#button-text').classList.remove('hidden');
                }
            };

        });









        // Handle form submission.
        //var form = document.getElementById('From_NewCard');
        //form.addEventListener('submit', function (event) {
        //    event.preventDefault();

        //    stripe.createToken(card).then(function (result) {
        //        if (result.error) {
        //            // Inform the user if there was an error.
        //            var errorElement = document.getElementById('card-errors');
        //            errorElement.textContent = result.error.message;
        //        } else {
        //            // Send the token to your server.
        //            stripeTokenHandler(result.token);
        //        }
        //    });
        //});

        // Submit the form with the token ID.
        //function stripeTokenHandler(token) {
        //    // Insert the token ID into the form so it gets submitted to the server
        //    var form = document.getElementById('From_NewCard');
        //    var hiddenInput = document.createElement('input');
        //    hiddenInput.setAttribute('type', 'hidden');
        //    hiddenInput.setAttribute('name', 'stripeToken');
        //    hiddenInput.setAttribute('value', token.id);

        //    var inpProfileId = document.createElement("input");
        //    inpProfileId.setAttribute('type', 'hidden');
        //    inpProfileId.setAttribute('name', 'SocialProfileId');
        //    inpProfileId.setAttribute('value', $("#SocialProfileId").val());

        //    form.appendChild(inpProfileId);
        //    form.appendChild(hiddenInput);

        //    if ($("#From_NewCard").valid()) {
        //        var data = $("#From_NewCard").serialize();
        //        $.ajax({
        //            type: "POST",
        //            url: "/targetpreferences/newcardpayment",
        //            data: data,
        //            dataType: "json",
        //            success: function (data) {
        //                if (!$.isEmptyObject(data)) {
        //                    if (data.ResultType == "Success") {
        //                        $("#Modal_ConfirmPaymentPlan").modal("hide");
        //                        $("#Modal_SuccessActivePlan").modal("show");
        //                        glb_profileJVStatusId = data.ResultData.JVStatusId;
        //                        $("#btn_updateSocialProfile").removeClass("hide");
        //                        $(".span_jvStatusName").text(data.ResultData.JVStatusName);
        //                        glb_activePlan = data.ResultData.ActivePlanId;
        //                        EnableDisableProfileSection();
        //                    } else {
        //                        $("#Modal_ConfirmPaymentPlan").modal("hide");
        //                        $("#Modal_MessageBoxErrorTitle").text("Oops!");
        //                        $("#Modal_MessageBoxErrorBody").text(data.message);
        //                        $("#Modal_MessageBoxFotter").text("Please Try Again");
        //                        $("#Modal_ErrorMessagebox").modal("show");
        //                    }
        //                }
        //                $("#ConfirmPaySpinner").hide();
        //            },
        //            failure: function (errMsg) {
        //                $("#Modal_ConfirmPaymentPlan").modal("hide");
        //                $("#Modal_MessageBoxErrorTitle").text("Oops!");
        //                $("#Modal_MessageBoxErrorBody").text(data.message);
        //                $("#Modal_MessageBoxFotter").text("Please Try Again");
        //                $("#Modal_ErrorMessagebox").modal("show");
        //                $("#ConfirmPaySpinner").hide();
        //            }
        //        });
        //    }

        //    //form.submit();
        //}
        /* for shift section after click on button*/
    </script>

    <script src="https://cdn.jsdelivr.net/gh/gitbrent/bootstrap4-toggle@3.6.1/js/bootstrap4-toggle.min.js"></script>
}
