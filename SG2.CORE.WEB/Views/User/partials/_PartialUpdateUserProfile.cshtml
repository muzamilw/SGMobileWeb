@model SG2.CORE.MODAL.ViewModals.Customers.CustomerProfileUpdateViewModel
@{

}


<h2>Basic Information</h2>


@using (Html.BeginForm("UpdateUserProfile", "User", FormMethod.Post, new { @id = "form_UpdateUserProfile" }))
{
    @Html.AntiForgeryToken()

    @*<div class="form-group">
            @Html.LabelFor(m => m.UserName, new { @class = "" })
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>*@

    <div class="form-group">
        @Html.LabelFor(m => m.FirstName, new { @class = "" })
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.SurName, new { @class = "" })
        @Html.TextBoxFor(m => m.SurName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.EmailAddress, new { @class = "" })
        @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control", @readonly = "readonly" })
        @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PhoneNumber, new { @class = "" })


        @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "phoneNumber form-control" })
        <span id="valid-msg" class="hide">✓ Valid</span>
        <span id="error-msg" class="hide"></span>
        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.PhoneCode)


    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.AddressLine1, new { @class = "" })
        @Html.TextBoxFor(m => m.AddressLine1, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.AddressLine2, new { @class = "" })
        @Html.TextBoxFor(m => m.AddressLine2, new { @class = "form-control"})
        @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.City, new { @class = "" })
        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.State, new { @class = "" })
        @Html.TextBoxFor(m => m.State, new { @class = "form-control"})
        @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Country, new { @class = "" })
        @Html.TextBoxFor(m => m.Country, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.PostCode, new { @class = "" })
        @Html.TextBoxFor(m => m.PostCode, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.PostCode, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Notes, new { @class = "" })
        @Html.TextAreaFor(m => m.Notes, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })
    </div>

    <div class="form-group form-actions">
        <button type="button" id="btn_UpdateUserProfile" class="btn btn-lg btn-primary">
            Update &nbsp;
            <i id="spn_updateUserProfile" style="display:none" class="fa fa-spinner fa-spin"></i>
        </button>
    </div>
    <div style="clear:both"></div>
}

<style type="text/css">
    .slct {
        width: 20%;
        display: inline;
        border: 1px solid #cccccc !important;
    }
</style>