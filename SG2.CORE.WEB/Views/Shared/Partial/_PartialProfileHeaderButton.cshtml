@using SG2.CORE.MODAL.DTO.Customers;
@using SG2.CORE.COMMON;
@using SG2.CORE.MODAL;

@{

    SocialProfile socialProfile = null;

    socialProfile = (SocialProfile)ViewBag.socialProfile;

    var appStatus = Model.AppStatus + (string.IsNullOrWhiteSpace(socialProfile.AppVersion) == false ? " - v" + socialProfile.AppVersion : "");
    var appStatusClass = "offline-btn";
    var ProfileStatus = "";
    var statusclass = "btn-info";

    switch (socialProfile.BlockedStatus)
    {
        case null: ProfileStatus = "Valid"; statusclass = "btn-info"; break;
        case 0: ProfileStatus = "Valid"; statusclass = "btn-info"; break;
        case 66: ProfileStatus = "Action Blocked"; statusclass = "btn-danger"; break;
        case 67: ProfileStatus = "Hard Blocked"; statusclass = "btn-danger"; break;
        case 68: ProfileStatus = "Password Blocked"; statusclass = "btn-danger"; break;
        default:
            ProfileStatus = "Valid"; statusclass = "btn-info";
            break;
    }

    if (Model.AppStatus == "Online")
    {
        appStatusClass = "online-btn";
    }

    var custDto = (CustomerDTO)ViewBag.CustomerDTO;


}

<div class="btn-group btn-sidebar" style="margin-top:12px;">

    @*@/*if (custDto.IsBroker == true)
    {*/*@
        <button class="btn btn-round btn-info" type="button"><i class="fa fa-dollar "></i> @ViewBag.PlanName</button>
        <button class="btn @appStatusClass" type="button">@appStatus</button>
        <button class="btn btn-round @statusclass" type="button"><i class="ft-activity pr-1"></i> @ProfileStatus</button>
    @*}
    else
    {
        <button class="btn btn-round btn-info" type="button"><i class="fa fa-dollar  "></i> @ViewBag.PlanName</button>

    }*@

</div>


