@using PagedList.Mvc
@using PagedList;
@using SG2.CORE.MODAL.ViewModals.Backend;
@using SG2.CORE.COMMON;
@using SG2.CORE.MODAL.DTO.Customers;
@model SG2.CORE.MODAL.ViewModals.Backend.CustomerOrderHistoryIndexViewModel
@{
    ViewBag.Title = "Payment Histroy";
    Layout = "~/Areas/SuperAdmin/Views/Shared/_Layoutnew.cshtml";
    var BaseURl = ViewBag.BaseUrl;

    
    var PlanStatus = "";
    var SocialProfile = (SocialProfileDTO)ViewBag.SocailProfile;
    var ProfileStatus = "";
    var statusclass = "btn-primary";
    var appStatus = SocialProfile.AppStatus;
    var appStatusClass = "offline-btn";
    if (SocialProfile.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.Active)
    {
        PlanStatus = "Active (Free)";
    }
    else if (SocialProfile.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.ActivePlan)
    {
        PlanStatus = "Active (Plan)";
    }
    else if (SocialProfile.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.canceled)
    {
        PlanStatus = "Cancelled";
    }
    else if (SocialProfile.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.Unsubscribe)
    {
        PlanStatus = "Unsubscribed";
    }

    switch (SocialProfile.SocialProfile.BlockedStatus)
    {
        case null: ProfileStatus = "Valid"; statusclass = "btn-primary"; break;
        case 0: ProfileStatus = "Valid"; statusclass = "btn-primary"; break;
        case 66: ProfileStatus = "Action Blocked"; statusclass = "btn-danger"; break;
        case 67: ProfileStatus = "Hard Blocked"; statusclass = "btn-danger"; break;
        case 68: ProfileStatus = "Password Blocked"; statusclass = "btn-danger"; break;
        case 70: ProfileStatus = "Block 4"; statusclass = "btn-danger"; break;
        case 71: ProfileStatus = "Block 5"; statusclass = "btn-danger"; break;
        default:
            ProfileStatus = "Valid"; statusclass = "btn-primary";
            break;
    }
     if (SocialProfile.AppStatus == "Online") {
        appStatusClass = "online-btn";
    }
}

@section styles{
    <link href="~/Content/ThemeAssets/css/backendcss.css" rel="stylesheet" />
    <link href="~/Content/ThemeAssets/css/style.css" rel="stylesheet" type="text/css">
    
}


<div class="information-wrap main">
    <div class="container">
        <div class="row">
            <div class="col-md-6 col-xs-12">
                <h3>
                    <img src="/Content/ThemeAssets/Images/InstagramLogoTransparent.png" width="36">
                    @(SocialProfile.SocialProfile.SocialUsername ?? "--")
                </h3>

            </div>
            <div class="col-md-6 col-xs-12 text-right">
                <div class="btn-group" style="margin-top:12px;">
                    <button class="btn btn-round btn-info" type="button"><i class="fa fa-dollar  "></i> @PlanStatus</button>
                    <button class="btn @appStatusClass" type="button">@appStatus</button>
                    <button class="btn btn-round btn-primary" type="button"><i class="ft-activity pr-1"></i> @ProfileStatus</button>

                </div>
           
            </div>
        </div>
    </div>
</div>

<div class="detail-page-contact mb-2" style="background: #404E67;">
    <div class="container" style="padding: 20px;">
        <div class="row">

            <div class="col-9">
                <a class="btn btn-primary" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/stats?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">Stats</a>
                <a class="btn btn-primary" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/DetailPage?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">Contact Details</a>
                <a class="btn btn-primary active" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/CustomerOrderHistory?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">Order History</a>
                <a class="btn btn-primary" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/targettinginformation?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">Target Form</a>
                <a class="btn btn-primary" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/lists?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">White & Black Lists</a>
                <a class="btn btn-primary" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/FollowList?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">Follow List</a>
            </div>
            <div class="col-3"><a class=" btn right" href="javascript:void(0);" style="color: #fff;line-height: 1;background-color: #6566A6; border-color: #6566A6;" onclick="history.go(-1);"><i class="fa fa-backward"></i> Back</a></div>

        </div>
    </div>
</div>
<div class="product-listing-sec">
    <div class="container">
        <div class="product-list-inner">
            <div class="row">
                <div class="col-xs-12">
                    <table>
                        <thead>
                            <tr>
                                <th scope="col">Purchase Date</th>
                                @*<th scope="col">Expire Date</th>*@
                                <th scope="col">Name</th>
                                <th scope="col">Price</th>
                                <th scope="col">Status</th>
                                @*<th scope="col">Status</th>*@
                            </tr>
                        </thead>
                        <tbody>

                            @foreach (var item in Model.CustomerOrderHListing)
                            {
                            <tr>
                                @if (item.StartDate.HasValue)
                                {
                                    <td data-label="StartDate"> @(item.StartDate.Value.ToShortDateString())</td>
                                }
                                else
                                {
                                    <td data-label="StartDate">--</td>
                                }
                                @*@if (item.EndDate.HasValue)
        {
            <td data-label="EndDate"> @(item.EndDate.Value.ToShortDateString())</td>
        }
        else
        {
            <td data-label="EndDate">--</td>
        }*@


                                <td data-label="Name" class="product">@(string.IsNullOrEmpty(item.Name) ? "--" : item.Name)</td>
                                <td data-label="Name" class="product">@(item.Price)</td>
                                <td data-label="Name" class="product">@(item.Status)</td>
                                @*<td data-label="Proxy">@(string.IsNullOrEmpty(item.Status) ? "--" : item.Status) </td>*@

                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="pagination-wrap">
            Page @(Model.TotalRecord < Model.PageNumber ? 0 : Model.PageNumber)
            of @Model.TotalRecord   @Html.PagedListPager((IPagedList<CustomerOrderHistoryViewModel>)Model.CustomerOrderHListing, page => Url.Action("CustomerOrderHistory", new { page }))
        </div>
    </div>
</div>

<style type="text/css">
    br {
        clear: both;
    }

    .information-wrap span.right {
        float: none
    }

    .information-wrap h3 {
        font-size: 20pt;
        color: black;
    }
</style>