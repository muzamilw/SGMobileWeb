@using SG2.CORE.MODAL.DTO.Customers;
@using SG2.CORE.COMMON;
@model SG2.CORE.MODAL.ViewModals.Backend.CustomerDetailViewModel
@{
    ViewBag.Title = "Customer Detail";
    Layout = "~/Areas/SuperAdmin/Views/Shared/_Layoutnew.cshtml";
    var BaseURl = ViewBag.BaseUrl;

    List<SelectListItem> Sources = new List<SelectListItem>();
    SelectListItem Sou = new SelectListItem();
    Sou.Text = "Mobile";
    Sou.Value = "1";
    Sources.Add(Sou);

    SelectListItem Sou1 = new SelectListItem();
    Sou1.Text = "Web";
    Sou1.Value = "2";
    Sources.Add(Sou1);

    SelectListItem Sou2 = new SelectListItem();
    Sou2.Text = "Personal";
    Sou2.Value = "3";
    Sources.Add(Sou2);



    List<SelectListItem> UsrListItems = new List<SelectListItem>();
    foreach (var item in Model.usersList)
    {
        // cities.Add(new SelectListItem { Text = item.Name, Value = item.CityId.ToString() });
        UsrListItems.Add(new SelectListItem { Text = item.UserName, Value = item.UserId.ToString() });
    }
    List<SelectListItem> Titles = new List<SelectListItem>();

    foreach (var item in Model.CustomerTitles)
    {
        Titles.Add(new SelectListItem { Text = item.TitleName, Value = item.TitleId.ToString() });
    }

    List<SelectListItem> CustomerStatuses = new List<SelectListItem>();
    foreach (var item in Model.statusDTOs.Where(x => x.StatusName == "Customer"))
    {
        CustomerStatuses.Add(new SelectListItem { Text = item.StatusValue, Value = item.StatusId.ToString() });
    }
    var cStatus = Model.statusDTOs.Where(m => m.StatusId.ToString() == Model.CustomerStatus).FirstOrDefault();
    var source = "";

    var title = Model.CustomerTitles.Where(m => m.TitleId.ToString() == Model.Title).FirstOrDefault();
    var SelectRspUsr = Model.usersList.Where(m => m.UserId == Model.ResTeamMember).FirstOrDefault();
    var src = Sources.SingleOrDefault(m => m.Value == Model.Source);
    if (src != null)
    {
        source = @Html.Encode(src.Text);

    }
    else
    {

        source = "--";
    }
    // var Source = @Html.Encode(Sources.SingleOrDefault(m => m.Value == Model.Source)??.Text);
    var RoleName = Model.usersList.Where(m => m.UserId == Model.ResTeamMember).FirstOrDefault();
    //var Role=Model.usersList.Where(m=>m.RoleName.ToString()==)


    
    var PlanStatus = "";
    var SocialProfile = (SocialProfileDTO)ViewBag.SocailProfile;
    var appStatus = SocialProfile.AppStatus;
    var appStatusClass = "offline-btn";
    if (SocialProfile.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.Active)
    {
        PlanStatus = "Active (Free)";
    }
    else if (SocialProfile.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.ActivePlan)
    {
        PlanStatus = "Active (Plan)";
    }
    else if (SocialProfile.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.canceled)
    {
        PlanStatus = "Cancelled";
    }
    else if (SocialProfile.SocialProfile.StatusId == (int)GlobalEnums.PlanSubscription.Unsubscribe)
    {
        PlanStatus = "Unsubscribed";
    }


    var DeviceStatus = "Not Connected";

    var DeviceIMEI = "Not Connected";

    if (SocialProfile.SocialProfile.DeviceStatus.HasValue)
    {
        if (SocialProfile.SocialProfile.DeviceStatus.Value == (int)GlobalEnums.DeviceStatus.Connected)
        {
            DeviceStatus = "Device Connected - Last sync on :" + SocialProfile.SocialProfile.LastConnectedDateTime.Value.ToString("dd MMM yyyy") + " " + SocialProfile.SocialProfile.LastConnectedDateTime.Value.ToUniversalTime().ToShortTimeString() + " UTC";
            DeviceIMEI = SocialProfile.SocialProfile.DeviceIMEI;

        }
    }


    var ProfileStatus = "";
    var statusclass = "btn-primary";

    switch (SocialProfile.SocialProfile.BlockedStatus)
    {
        case null: ProfileStatus = "Valid"; statusclass = "btn-primary"; break;
        case 0: ProfileStatus = "Valid"; statusclass = "btn-primary"; break;
        case 66: ProfileStatus = "Action Blocked"; statusclass = "btn-danger"; break;
        case 67: ProfileStatus = "Hard Blocked"; statusclass = "btn-danger"; break;
        case 68: ProfileStatus = "Password Blocked"; statusclass = "btn-danger"; break;
        case 70: ProfileStatus = "Block 4"; statusclass = "btn-danger"; break;
        case 71: ProfileStatus = "Block 5"; statusclass = "btn-danger"; break;
        default:
            ProfileStatus = "Valid"; statusclass = "btn-primary";
            break;
    }
     if (SocialProfile.AppStatus == "Online") {
        appStatusClass = "online-btn";
    }
}
@section styles{
    <link href="~/Content/ThemeAssets/css/backendcss.css" rel="stylesheet" />
    <link href="~/Content/ThemeAssets/css/style.css" rel="stylesheet" type="text/css">
    <link href="~/Content/app-assets/css/pincode.css" rel="stylesheet" />
    <style>
        .pincode-input-text {
            -webkit-user-select: none;
            -moz-user-select: none;
            -ms-user-select: none;
            user-select: none;
        }
    </style>
}

@if (!string.IsNullOrEmpty(ViewBag.Success))
{
    <br />
    <div class="row">
        <div class="col-sm-12">
            <div class="alert alert-block alert-success">
                <p>
                    <strong>
                        <i class="ace-icon fa fa-check"></i>
                        Success!
                    </strong>
                    @ViewBag.Message
                </p>
            </div>
        </div>
    </div>
}

<div class="information-wrap main">
    <div class="container">
        <div class="row">
            <div class="col-md-6 col-xs-12">
                <h3>
                    <img src="/Content/ThemeAssets/Images/InstagramLogoTransparent.png" width="36">
                    @(Model.InstaUsrName ?? "--")
                </h3>

            </div>
            <div class="col-md-6 col-xs-12 text-right">
                <div class="btn-group" style="margin-top:12px;">
                    <button class="btn btn-round btn-info" type="button"><i class="fa fa-dollar  "></i> @PlanStatus</button>
                    <button class="btn @appStatusClass" type="button">@appStatus</button>
                    <button class="btn btn-round btn-primary" type="button"><i class="ft-activity pr-1"></i> @ProfileStatus</button>

                </div>
            </div>
        </div>
    </div>
</div>


<div class="detail-page-contact mb-2" style="background: #404E67;">
    <div class="container" style="padding: 20px;">
        <div class="row">

            <div class="col-9">
                <a class="btn btn-primary" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/stats?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">Stats</a>
                <a class="btn btn-primary" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/DetailPage?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">Contact Details</a>
                <a class="btn btn-primary active" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/CustomerOrderHistory?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">Order History</a>
                <a class="btn btn-primary" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/targettinginformation?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">Target Form</a>
                <a class="btn btn-primary" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/lists?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">White & Black Lists</a>
                <a class="btn btn-primary" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/FollowList?id=@Url.Encode(CryptoEngine.Encrypt(Model.Id))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))">Follow List</a>
            </div>
            <div class="col-3"><a class=" btn right" href="javascript:void(0);" style="color: #fff;line-height: 1;background-color: #6566A6; border-color: #6566A6;" onclick="history.go(-1);"><i class="fa fa-backward"></i> Back</a></div>

        </div>
    </div>
</div>
<div class="container mb-2">
    <div class="information-form-detail">
        <div class="information-form-inner detail">
            <div class="row">
                <div class="col-md-4 col-xs-6">

                    <div class="user-inner">
                        <label style="border-bottom: 1px solid lightgray;font-size:1.2rem">Device Status</label>
                        <div class="displayBlock" id="firstName-textBlock">
                            <h2 class="displayText" style="color:black;font-size: 0.85rem;">@DeviceStatus</h2>

                        </div>

                    </div>
                </div>
                <div class="col-md-4 col-xs-6">

                    <div class="user-inner">
                        <label style="border-bottom: 1px solid lightgray;font-size:1.2rem">Email</label>
                        <div class="displayBlock" id="firstName-textBlock">
                            <h2 class="displayText" style="color:black;font-size: 0.85rem;">@Html.DisplayFor(m => m.Email)</h2>

                        </div>

                    </div>
                </div>
                <div class="col-md-4 col-xs-6">

                    <div class="user-inner">
                        <label style="border-bottom: 1px solid lightgray;font-size:1.2rem">Pin Code</label>
                        <div class="displayBlock" id="firstName-textBlock">
                            <input readonly type="text" class="form-control" id="pincode" value="@SocialProfile.SocialProfile.PinCode">

                        </div>

                    </div>
                </div>
            </div>
            <hr />
            <div class="form-inner">
                <div class="form-first">
                    <div class="row">

                        <div class="col-md-4 col-sm-4 col-xs-12">
                            <div class="user-inner">
                                <label>First name</label>
                                <div class="displayBlock" id="firstName-textBlock">
                                    <h2 class="displayText">@Html.DisplayFor(m => m.FirstName)</h2>
                                    <a href="#" text-block="firstName-textBlock" edit-Block="firstName-editBlock" class="editIcon"><i class="fa fa-pencil"></i></a>
                                </div>
                                <div class="editBlock" id="firstName-editBlock" style="display:none">
                                    <input type="text" value="@Model.FirstName" id="input_firstName" class="" name="firstName" />
                                    <a href="#" text-block="firstName-textBlock" edit-Block="firstName-editBlock" control-id="input_firstName" class="btn_savedata"><i class="fa fa-save"></i> | </a>
                                    <a href="#" text-block="firstName-textBlock" edit-Block="firstName-editBlock" class="canceleditIcon"><i class="fa fa-times"></i></a>
                                </div>
                            </div>


                        </div>
                        <div class="col-md-4 col-sm-4 col-xs-12">
                            <div class="user-inner">
                                <label>Last Name</label>
                                <div class="displayBlock" id="LastName-textBlock">
                                    <h2 class="displayText">@(string.IsNullOrEmpty(Model.LastName) ? "--" : Model.LastName)</h2>
                                    <a href="#" text-block="LastName-textBlock" edit-Block="LastName-editBlock" class="editIcon"><i class="fa fa-pencil"></i></a>
                                </div>
                                <div class="editBlock" id="LastName-editBlock" style="display:none">
                                    <input type="text" value="@Model.LastName" id="input_LastName" class="" name="LastName" />
                                    <a href="#" text-block="LastName-textBlock" edit-Block="LastName-editBlock" control-id="input_LastName" class="btn_savedata"><i class="fa fa-save"></i> | </a>
                                    <a href="#" text-block="LastName-textBlock" edit-Block="LastName-editBlock" class="canceleditIcon"><i class="fa fa-times"></i></a>
                                </div>
                            </div>





                        </div>

                        @*<div class="col-md-4 col-sm-4 col-xs-12">
                                <div class="user-inner">
                                    <label>Social Password</label>
                                    <div class="displayBlock" id="Password-textBlock">
                                        <h2 class="displayText">@(string.IsNullOrEmpty(SocialProfile.SocialProfile.SocialPassword) ? "--" : SocialProfile.SocialProfile.SocialPassword)</h2>

                                    </div>

                                </div>





                            </div>*@
                    </div>
                </div>




            </div>
        </div>

        <br />




        <div class="source">
            <div class="row">

                <div class="col-md-4 col-sm-4 col-xs-6 inner-colm">
                    <div class="user-inner">
                        <span>Registered</span>
                        <h2>@Html.DisplayFor(m => m.UpdatedOn)</h2>
                    </div>
                </div>



                <div class="col-md-4 col-sm-4 col-xs-6 inner-colm">
                    <div class="user-inner" style="display:none">
                        <span>Cancelled Date</span>
                        <h2>@Html.DisplayFor(m => m.UpdatedOn)</h2>
                    </div>
                </div>


            </div>
        </div>

        <div class="delete-user">
            <div class="row">
                <div class="col-sm-12 col-lg-2">
                    <a href="#" class="delete btn_ShowDeleteConfrimModal">Delete profile Permanently</a>
                </div>
                <div class="col-sm-12 col-lg-2">
                    <a href="#" class="delete btn_ShowRefundConfirmModal" style="background-color:blueviolet">Refund First Month Charge</a>
                </div>

                <div class="col-sm-12 col-lg-4">
                    <a href="#" class="delete btn_ShowTwoWeekConfirmModal" style="background-color:blueviolet">Give 2 Week Free Service (Delay Next Billing by 14 days)</a>
                </div>

                <div class="col-sm-12 col-lg-2">
                    <a href="#" class="delete btn_ShowOneWeekConfirmModal" style="background-color:blueviolet">Give 7 Day Free Service</a>
                </div>

                <div class="col-sm-12 col-lg-2">
                    <a href="#" class="delete btn_ShowThreeDaysConfirmModal" style="background-color:blueviolet">Give 3 Day Free Service</a>
                </div>

            </div>
        </div>
        <h4 class="form-section mt-3"><i class="ft-user"></i>Device Push Notifications (Coming Soon)</h4>
        <div class="delete-user">
            <div class="row">
                <div class="col-sm-12 col-lg-3">
                    <a href="#" class="btn btn-block btn-primary btn-lg " style="width:100%">Alert</a>
                </div>


                <div class="col-sm-12 col-lg-3">
                    <a href="#" class="btn btn-block btn-primary btn-lg " style="background-color:blueviolet;width:100%">Play Alarm</a>
                </div>

                <div class="col-sm-12 col-lg-3">
                    <a href="#" class="btn btn-block btn-primary btn-lg " style="background-color:blueviolet;width:100%">Get latest Log</a>
                </div>

                <div class="col-sm-12 col-lg-3">
                    <a href="#" class="btn btn-block btn-primary btn-lg " style="background-color:blueviolet;width:100%">Restart App</a>
                </div>

            </div>
        </div>
    </div>
</div>

<div id="Modal_ConfirmDeletion" class="modal fade" data-backdrop="static" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-left">Delete Profile Confirmation!</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete the item.</p>
                <h3 style="color:red">This will delete all CRM records, Profiles and user data Permanently</h3>
                <input type="hidden" id="hdn_DeleteItemId" value="" />
                <input type="text" id="deleteConfirmation" placeholder="Type in 'Delete This Profile' to continue" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary btn_ConfirmDelete">Delete Permanently</button>
            </div>
        </div>

    </div>
</div>

<div id="Modal_ConfirmRefund" class="modal fade" data-backdrop="static" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-left">Refund Confirmation!</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>
            <div class="modal-body" style="padding:15px 30px">
                @*<h3 style="color:red">Refund will be initiated </h3>*@
                <br />
                <br />
                <label>Please Enter Password to proceed for Refund</label>
                <input type="password" id="RefundPassword" value="" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary btn_ConfirmRefund">Confirm</button>
            </div>
        </div>

    </div>
</div>

<div id="Modal_ConfirmAddFreeDaysService" class="modal fade" data-backdrop="static" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title text-left">Add Free Days Confirmation!</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>

            </div>
            <div class="modal-body" style="padding:15px 30px">
                @*  <h3 style="color:red">Give 2 Week Free Service (Delay Next Billing by 14 days)</h3>*@
                <br /><br />
                <label>Please Enter Password to add Free Days </label>
                <input type="password" id="AddFreeDays_Password" value="" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary btn_AddFreeDaysService">Confirm</button>
            </div>
        </div>

    </div>
</div>

<style type="text/css">
    .editBlock input {
        width: 90%;
        display: inline;
        margin: 10px 0;
    }

    .editBlock a {
        color: white;
        margin-top: 12px;
        float: none
    }

    .user-inner a {
        color: white;
        margin-top: 12px;
    }

    .form-first .user-inner a {
        color: #555;
        margin-top: 12px;
    }

    .form-first .user-inner label {
        color: #555;
        font-size: 1.2rem;
    }

    .form-first .user-inner h2 {
        color: black;
        font-size: 0.85rem;
    }

    .form-first .user-inner {
        padding: 5px;
        margin: 10px 5px;
    }

        .form-first .user-inner label {
            display: block;
            border-bottom: 1px solid lightgray;
        }

    .source .user-inner span {
        border-bottom: 1px solid lightgray;
        padding-bottom: 5px;
        margin-bottom: 5px;
    }

    .source .user-inner {
        padding: 0 10px;
    }

    .user-inner input, .user-inner select {
        width: 85%
    }

    .source a {
        color: #5c5c5c
    }

    .information-wrap span.right {
        float: none
    }

    .information-wrap h3 {
        font-size: 20pt;
        color: black;
    }

    .delete-user a {
        padding: 10px;
        font-size: 11pt;
        font-weight: 500;
        width: auto;
    }
</style>


@section Scripts{


    <script src="~/content/app-assets/vendors/js/pickers/dateTime/bootstrap-datetimepicker.min.js"></script>
    <script type="text/javascript">

        var glb_CustomerId = "@Url.Encode(CryptoEngine.Encrypt(Model.Id))";
        var glb_SocialProfileId = "@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfileId))";
        var glb_user = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.usersList));
        var gbl_AdminPassword = "123";
        var gbl_addFreeDays = 0;


        //var glb_user = (Newtonsoft.Json.JsonConvert.SerializeObject(Model.usersList));

        $(document).ready(function () {


            $('#pincode').pincodeInput({ hidedigits: false, inputs: 6 });

            $(".editIcon").on("click", function (e) {
                e.preventDefault();
                e.stopPropagation();

                var textBlockId = $(this).attr("text-block");
                var editBlockId = $(this).attr("edit-block");
                $("#" + textBlockId).hide();
                $("#" + editBlockId).show();

                return false;
            });

            $(".canceleditIcon").on("click", function (e) {
                e.preventDefault();
                e.stopPropagation();

                var textBlockId = $(this).attr("text-block");
                var editBlockId = $(this).attr("edit-block");
                $("#" + textBlockId).show();
                $("#" + editBlockId).hide();

                return false;
            });

            $(".btn_savedata").on("click", function (e) {
                e.preventDefault();
                e.stopPropagation();

                var ControlId = $(this).attr("control-id");
                var textBlockId = $(this).attr("text-block");
                var editBlockId = $(this).attr("edit-block");

                $("#" + textBlockId).show();
                $("#" + editBlockId).hide();

                $("#" + ControlId)[0].tagName
                var fieldName = $("#" + ControlId).attr("name");

                if (fieldName == "ResTeamMember") {

                    var textT = $("#input_ResTeamMember option:selected").text();
                }
                else if (fieldName == "Source") {
                    var textT = $("#input_Source option:selected").text();

                }
                else if (fieldName == "Country") {

                    var textT = $("#input_Country option:selected").text();
                }
                else if (fieldName == "Town") {
                    var textT = $("#input_City option:selected").text();
                }
                else if (fieldName == "Title") {
                    var textT = $("#input_Title option:selected").text();
                }
                else if (fieldName == "AvaToEveryOne") {
                    var AvaToEveryOne = $("#AvaToEveryOne:checked").val();
                    if (AvaToEveryOne == "0") {
                        var textT = "No"
                    }
                    else {
                        var textT = "Yes"
                    }

                }
                else if (fieldName == "CustomerStatus") {
                    var textT = $("#input_CStatus option:selected").text();
                }
                else {
                    var textT = $("#" + ControlId).val();
                }

                if (fieldName == "AvaToEveryOne") {

                    var textVal = $("#AvaToEveryOne:checked").val();
                }



                else {
                    var textVal = $("#" + ControlId).val();
                }

                $("#" + textBlockId + " > h2").text(textT)
                SaveUserDataIndividually(textVal, fieldName)
                $("#input_Comment").val("");
                return false;
            });

            function SaveUserDataIndividually(_Value, _FieldName) {
                var url = GLB_BASEURL+"/CRM/SaveUpdateUserDataIndividually";
                $.ajax({
                    url: url,
                    data: { value: _Value, fieldName: _FieldName, customerId: glb_CustomerId, SocialProfileId: glb_SocialProfileId},
                    type: "POST",
                    dataType: "json",
                    success: function (data) {

                    },
                    error: function (reponse) {

                    }
                });

            }

           $(function () {
               // $('#datetimepicker1').data("DateTimePicker").datetimepicker();
                $('#datetimepicker1').datetimepicker();

            });

            $(".btn_ShowDeleteConfrimModal").on("click", function (e) {

                e.stopPropagation();
                e.preventDefault();
                $("#Modal_ConfirmDeletion").modal("show");
            })


            $(".btn_ShowRefundConfirmModal").on("click", function (e) {

                e.stopPropagation();
                e.preventDefault();
                $("#Modal_ConfirmRefund").modal("show");

            })


            $(".btn_ShowTwoWeekConfirmModal").on("click", function (e) {

                e.stopPropagation();
                e.preventDefault();
                gbl_addFreeDays = 15;
                $("#Modal_ConfirmAddFreeDaysService").modal("show");
            })

            $(".btn_ShowOneWeekConfirmModal").on("click", function (e) {

                e.stopPropagation();
                e.preventDefault();
                gbl_addFreeDays = 7;
                $("#Modal_ConfirmAddFreeDaysService").modal("show");
            })

            $(".btn_ShowThreeDaysConfirmModal").on("click", function (e) {

                e.stopPropagation();
                e.preventDefault();
                gbl_addFreeDays = 3;
                $("#Modal_ConfirmAddFreeDaysService").modal("show");
            })


            $(".btn_ConfirmDelete").on("click", function () {

                if ($("#deleteConfirmation").val() != "Delete This Profile") {
                    var options = {};
                    $("#deleteConfirmation").effect("bounce", options, 500, null);
                    return false;
                }

                $.ajax({

                    url: GLB_BASEURL + "/CRM/DeleteCustomerProfile",
                    type: "Get",
                    data: { customerId: glb_CustomerId, profileId: glb_SocialProfileId },
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (Data) {

                        if (Data.Data.ResultType == "Success") {
                            $("#Modal_ConfirmDeletion").modal("hide");
                            $("#Modal_MessageBoxTitle").text(Data.Data.ResultType);
                            $("#Modal_MessageBoxBody").text(Data.Data.message);
                            $("#Modal_Messagebox").modal("show");
                            //TODO:Handle the status here

                            setTimeout(function () {
                                 window.location.href = GLB_BASEURL+"/CRM/Index"
                            }, 1000);


                        } else {
                            $("#Modal_ConfirmDeletion").modal("hide");
                            $("#Modal_MessageBoxTitle").text(Data.Data.ResultType);
                            $("#Modal_MessageBoxBody").text(Data.Data.message);
                            $("#Modal_Messagebox").modal("show");
                        }
                    },
                    error: function () {
                        alert("An error has occured!!!");
                    }
                });
            });

            $(".btn_ConfirmRefund").on("click", function () {

                var pass = $("#RefundPassword").val();
                if (pass != GLB_ADMINPASSWORD) {
                    $("#Modal_MessageBoxTitle").text("Verification Failed");
                    $("#Modal_MessageBoxBody").text("Incorrect Password");
                    $("#Modal_Messagebox").modal("show");
                    return
                }
                $.ajax({

                    url: GLB_BASEURL + "/CRM/RefundToCustomer",
                    type: "Get",
                    data: { customerId: glb_CustomerId,profileId: glb_SocialProfileId },
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (Data) {

                        if (Data.Data.ResultType == "Success") {
                            $("#Modal_ConfirmRefund").modal("hide");
                            $("#Modal_MessageBoxTitle").text(Data.Data.ResultType);
                            $("#Modal_MessageBoxBody").text(Data.Data.message);
                            $("#Modal_Messagebox").modal("show");
                            //TODO:Handle the status here

                            //setTimeout(function () {
                            //    window.location.href = GLB_BASEURL + "/CRM/Index"
                            //}, 2000);
                        } else {
                            $("#Modal_ConfirmRefund").modal("hide");
                            $("#Modal_MessageBoxTitle").text(Data.Data.ResultType);
                            $("#Modal_MessageBoxBody").text(Data.Data.message);
                            $("#Modal_Messagebox").modal("show");
                        }
                    },
                    error: function () {
                        alert("An error has occured!!!");
                    }
                });
            });


            $(".btn_AddFreeDaysService").on("click", function () {

                var pass = $("#AddFreeDays_Password").val();

                if (pass != GLB_ADMINPASSWORD) {
                    $("#Modal_MessageBoxTitle").text("Verification Failed");
                    $("#Modal_MessageBoxBody").text("Incorrect Password");
                    $("#Modal_Messagebox").modal("show");
                    return
                }
                $.ajax({

                    url: GLB_BASEURL + "/CRM/AddFreeDaysToCustomer",
                    type: "Get",
                    data: { profileId: glb_SocialProfileId, addFreeDays: gbl_addFreeDays },
                    dataType: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (Data) {

                        if (Data.Data.ResultType == "Success") {
                            $("#Modal_ConfirmAddFreeDaysService").modal("hide");
                            $("#Modal_MessageBoxTitle").text(Data.Data.ResultType);
                            $("#Modal_MessageBoxBody").text(Data.Data.message);
                            $("#Modal_Messagebox").modal("show");
                            //TODO:Handle the status here

                            //setTimeout(function () {
                            //    window.location.href = GLB_BASEURL + "/CRM/Index"
                            //}, 2000);
                        } else {
                            $("#Modal_ConfirmAddFreeDaysService").modal("hide");
                            $("#Modal_MessageBoxTitle").text(Data.Data.ResultType);
                            $("#Modal_MessageBoxBody").text(Data.Data.message);
                            $("#Modal_Messagebox").modal("show");
                        }
                    },
                    error: function () {
                        alert("An error has occured!!!");
                    }
                });
            });
        });

    </script>
    <script src="~/Content/app-assets/js/scripts/bootstrap-pincode-input.js"></script>
}





