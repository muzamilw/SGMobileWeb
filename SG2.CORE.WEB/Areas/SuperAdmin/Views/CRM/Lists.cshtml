@using SG2.CORE.MODAL.DTO.Customers;
@using SG2.CORE.COMMON;
@using SG2.CORE.MODAL;
@using SG2.CORE.MODAL.ViewModals.Customers;
@using SG2.CORE.MODAL.DTO.PlanInformation;
@model SG2.CORE.MODAL.DTO.Customers.SocialProfileDTO
@{

    ViewBag.Title = "White & Black Lists";
    Layout = "~/Areas/SuperAdmin/Views/Shared/_LayoutNew.cshtml";
    var custDto = (CustomerDTO)ViewBag.CustomerDTO;
    var BaseURl = ViewBag.BaseUrl;
   

    ViewBag.socialProfile = Model.SocialProfile;
   
    var onlineStatus = Model.AppStatus + " - v" + Model.SocialProfile.AppVersion;
    
    var onlineStatusClass = "offline-btn";
    var planStatusClass = "btn-primary";
    string blockStatusClass = "";

    var PlanName = "";
    PlanName = Model.CurrentPaymentPlan == null ? "FREE" :  Model.CurrentPaymentPlan.PlanName;
    if ( PlanName  == "FREE")
    {
        planStatusClass = "btn-danger";
    }

    string BlockStatus = Model.BlockStatus;
    if (Model.SocialProfile.BlockedStatus == null)
    {
        blockStatusClass = "btn-primary";
    }
    else if (Model.SocialProfile.BlockedStatus == 0)
    {
        blockStatusClass = "btn-primary";
    }
    else
    {
        blockStatusClass = "btn-danger";
    }

    if (Model.AppStatus == "Online") {
        onlineStatusClass = "online-btn";
    }
}


@section styles{

    <link href="~/Content/app-assets/vendors/css/forms/tags/tagging.css" rel="stylesheet" />
    <style>
          .information-wrap{
            margin-top: 20px;
    margin-bottom: 20px;
        }
          
        .information-wrap h3 {
    font-size: 20pt;
    color: black;
}
.information-wrap h3 {
    font-size: 25px;
    color: #000000;
    display: inline-block;
    vertical-align: top;
    font-family: arial sans-serif;
    font-weight: 400;
}
    .information-wrap span.right {
    float: none;
}
.information-wrap span.right {
    font-size: 15px;
    color: black;
    font-weight: 400;
    float: right;
}
    .information-wrap span.right i {
    color: black;
    font-style: normal;
}
    .right {
    float: right;
}
    .text-right {
    text-align: right !important;
}
    br {
    clear: both;
}

            .offline-btn {
    background-color: #cb5050;
    color: white;
    padding-left: 20px;
    padding-right: 20px;
}
.online-btn {
    background-color: green;
    color: white;
    padding-left: 20px;
    padding-right: 20px;
}
    </style>
}


<div class="information-wrap main" style="padding-top: 46px;">
    <div class="container">
        <div class="row">
            <div class="col-md-6 col-xs-12">
                <h3>
                    <img src="/Content/ThemeAssets/Images/InstagramLogoTransparent.png" width="36">
                    @(Model.SocialProfile.SocialUsername ?? "--")
                </h3>

            </div>
            <div class="col-md-6 col-xs-12 text-right">
                <div class="btn-group" style="margin-top:12px;">
                    <button class="btn btn-round @planStatusClass" type="button"><i class="fa fa-dollar  "></i> @PlanName</button>
                    <button class="btn @onlineStatusClass" type="button">@onlineStatus</button>
                    <button class="btn btn-round @blockStatusClass" type="button"><i class="ft-activity pr-1"></i> @BlockStatus</button>

                </div>
            </div>
        </div>
    </div>
</div>

<div class="detail-page-contact" style="background: #404E67;">
    <div class="container" style="padding: 5px;">
        <div class="row mt-1">

            <div class="col-9">
                <a class="btn btn-primary   mb-1" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/stats?id=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.CustomerId.ToString()))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.SocialProfileId.ToString()))">Stats</a>
                <a class="btn btn-primary   mb-1" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/DetailPage?id=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.CustomerId.ToString()))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.SocialProfileId.ToString()))">Contact Details</a>
                <a class="btn btn-primary  mb-1" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/CustomerOrderHistory?id=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.CustomerId.ToString()))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.SocialProfileId.ToString()))">Order History</a>
                <a class="btn btn-primary  mb-1" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/targettinginformation?id=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.CustomerId.ToString()))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.SocialProfileId.ToString()))">Target Form</a>
                <a class="btn btn-primary active mb-1" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/lists?id=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.CustomerId.ToString()))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.SocialProfileId.ToString()))">White & Black Lists</a>
                <a class="btn btn-primary mb-1" style="line-height: 1; margin-right: 10px;" href="@BaseURl/crm/FollowList?id=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.CustomerId.ToString()))&SPId=@Url.Encode(CryptoEngine.Encrypt(Model.SocialProfile.SocialProfileId.ToString()))">Follow List</a>
            </div>
            <div class="col-3 text-right"><a class=" btn right" href="javascript:void(0);"  style="color: #fff;line-height: 1;background-color: #6566A6; border-color: #6566A6;" onclick="history.go(-1);"><i class="fa fa-backward"></i> Back</a></div>

        </div>
    </div>
</div>

<form class="form" id="formlists" method="post" action="Lists" novalidate>
    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.SocialProfileId)
    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.TargetingInformationId)

    <!-- BEGIN: Content-->
    <div class="app-content container center-layout mt-2">
        <div class="content-wrapper">

            <div class="content-body">
                <!-- Basic form layout section start -->
                <section id="horizontal-form-layouts">
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card">
                                <div class="card-header">
                                    <h4 class="card-title" id="horz-layout-basic">White & Black Lists</h4>
                                    <a class="heading-elements-toggle"><i class="fa fa-ellipsis-v font-medium-3"></i></a>
                                    <div class="heading-elements">
                                        <ul class="list-inline mb-0">
                                            <li></li>

                                        </ul>
                                    </div>
                                </div>
                                <div class="card-content collpase show">
                                    <div class="card-body">


                                        <div class="form-body">
                                            <h4 class="form-section"><i class="ft-user"></i> White Lists</h4><p style="color:black">
                                                Usernames you never want to unfollow
                                            </p>
                                            <div class="form-group row">
                                                <label class="col-md-3 label-control" for="projectinput1">
                                                    White List (User typed in)<br />
                                                </label>

                                                <div class="col-md-9">


                                                    <div id="wltyped" class="edit-on-delet form-control" data-tags-input-name="@Html.NameFor(m => m.SocialProfile_Instagram_TargetingInformation.WhistListManualUsers)">@Model.SocialProfile_Instagram_TargetingInformation.WhistListManualUsers</div>

                                                    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.WhistListManualUsers)
                                                </div>


                                            </div>
                                            @*<div class="form-group row">
                                                    <label class="col-md-3 label-control" for="projectinput2">White List (Extracted from live account )</label>
                                                    <div class="col-md-9">

                                                        <div id="wlextracted" class="edit-on-delete form-control" data-tags-input-name="wlextracted">@Model.SocialProfile_Instagram_TargetingInformation.WhilstListImportedUsers</div>

                                                        @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.WhilstListImportedUsers)
                                                    </div>
                                                </div>*@

                                            <h4 class="form-section"><i class="ft-clipboard"></i> Black Lists</h4><p style="color:black">
                                                User typed in Usernames, hashtags and locations to not follow
                                            </p>
                                            <div class="form-group row">
                                                <label class="col-md-3 label-control" for="projectinput5">Usernames</label>
                                                <div class="col-md-9">


                                                    <div id="blUsernames" class="edit-on-delete form-control" data-tags-input-name="blUsernames">@Model.SocialProfile_Instagram_TargetingInformation.BlackListUsers</div>

                                                    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.BlackListUsers)
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-md-3 label-control" for="projectinput6">Locations</label>
                                                <div class="col-md-9">


                                                    <div id="blLocations" class="edit-on-delete form-control" data-tags-input-name="blLocations">@Model.SocialProfile_Instagram_TargetingInformation.BlackListLocations</div>

                                                    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.BlackListLocations)
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-md-3 label-control" for="projectinput7">Hashtags</label>
                                                <div class="col-md-9">


                                                    <div id="blHashtags" class="edit-on-delete form-control" data-tags-input-name="blHashtags">@Model.SocialProfile_Instagram_TargetingInformation.BlackListHashtags</div>

                                                    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.BlackListHashtags)
                                                </div>
                                            </div>
                                            <div class="form-group row">
                                                <label class="col-md-3 label-control">Black List Words</label>
                                                <div class="col-md-9">

                                                    <div id="bWordsManual" class="edit-on-delete form-control" data-tags-input-name="bWordsManual">@Model.SocialProfile_Instagram_TargetingInformation.BlackListWordsManual</div>

                                                    @Html.HiddenFor(m => m.SocialProfile_Instagram_TargetingInformation.BlackListWordsManual)
                                                </div>
                                            </div>

                                        </div>
                                        <div class="form-actions text-center">

                                            <button type="submit" class="btn btn-primary">
                                                <i class="fa fa-check-square-o"></i> Save
                                            </button>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
                <!-- // Basic form layout section end -->
            </div>
        </div>
    </div>
    <!-- END: Content-->
</form>


@section Scripts{

    <script src="~/Content/app-assets/vendors/js/forms/tags/tagging.min.js"></script>
    <script src="~/Content/app-assets/vendors/js/extensions/sweetalert.min.js"></script>
    <script src="~/Content/app-assets/js/scripts/extensions/sweet-alerts.js"></script>
    <script>
        var somethingChanged = false;
        var wltyped, wltypedbox, wlextracted, wlextractedbox, blUsernames, blUsernamesbox, blLocations, blLocationsbox, blHashtags, blHashtagsbox, bWordsManual, bWordsManualbox;
        $(document).ready(function () {
            /*******************************
            *       Simple Options         *
            *******************************/
              @if (ViewBag.success == 1) {
                @:swal("Success!", "You have successfully updated the white & black lists. They will be reflected next time mobile app is executed!", "success");
            }


            wltyped = $("#wltyped").tagging({
                "edit-on-delete": false,
                "no-spacebar": true,
                "tag-char": '',
                'forbidden-chars': [",", "?"]
            });
            wltypedbox = wltyped[0];

            wlextracted = $("#wlextracted").tagging({
                "edit-on-delete": false,
                "no-spacebar": true,
                "tag-char": '',
                'forbidden-chars': [",", "?"]
            });
            wlextractedbox = wlextracted[0];


            blUsernames = $("#blUsernames").tagging({
                "edit-on-delete": false,
                "no-spacebar": true,
                "tag-char": '',
                'forbidden-chars': [",", "?"]
            });
            blUsernamesbox = blUsernames[0];

            blLocations = $("#blLocations").tagging({
                "edit-on-delete": false,
                "no-spacebar": true,
                "tag-char": '',
                'forbidden-chars': [",", "?"]
            });
            blLocationsbox = blLocations[0];


            blHashtags = $("#blHashtags").tagging({
                "edit-on-delete": false,
                "no-spacebar": true,
                "tag-char": '',
                'forbidden-chars': [",", "?"]
            });
            blHashtagsbox = blHashtags[0];

            bWordsManual = $("#bWordsManual").tagging({
                "edit-on-delete": false,
                "no-spacebar": true,
                "tag-char": '',
                'forbidden-chars': [",", "?"]
            });
            bWordsManualbox = bWordsManual[0];



            //// Edit / Delete tag on delete
            //$(".edit-on-delete").tagging({
            //    "edit-on-delete": false,
            //    "no-spacebar": true,
            //    "tag-char" : ''
            //});


            $(document).ready(function () {
                $('input').change(function () {
                    somethingChanged = true;
                });
            });

            window.onbeforeunload = function () {
                if (somethingChanged)
                    return 'Targeting information has changed, Are you sure you want to navigate away without saving the changes ?';
            };

        });

        $('#formlists').submit(function (e) {
            somethingChanged = false;
            document.getElementById("SocialProfile_Instagram_TargetingInformation_WhistListManualUsers").value = wltypedbox.tagging("getTags").join(', ');


            //document.getElementById("SocialProfile_Instagram_TargetingInformation_WhilstListImportedUsers").value = wlextractedbox.tagging("getTags").join(', ');

            document.getElementById("SocialProfile_Instagram_TargetingInformation_BlackListUsers").value = blUsernamesbox.tagging("getTags").join(', ');

            document.getElementById("SocialProfile_Instagram_TargetingInformation_BlackListLocations").value = blLocationsbox.tagging("getTags").join(', ');

            document.getElementById("SocialProfile_Instagram_TargetingInformation_BlackListHashtags").value = blHashtagsbox.tagging("getTags").join(', ');

            document.getElementById("SocialProfile_Instagram_TargetingInformation_BlackListWordsManual").value = bWordsManualbox.tagging("getTags").join(', ');


        });
    </script>

}
